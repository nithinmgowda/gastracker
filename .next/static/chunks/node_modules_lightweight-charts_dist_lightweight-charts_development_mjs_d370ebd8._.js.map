{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/node_modules/lightweight-charts/dist/lightweight-charts.development.mjs"],"sourcesContent":["/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v5.0.8\n * Copyright (c) 2025 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\nconst customStyleDefaults$1 = {\n    color: '#2196f3',\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dotted line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined ||\n                !Object.prototype.hasOwnProperty.call(src, i) ||\n                ['__proto__', 'constructor', 'prototype'].includes(i)) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options()['layout'].textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options()['layout'].fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options()['layout'].fontFamily;\n    }\n}\n\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    if (component <= 0 || component > 1) {\n        return Math.min(Math.max(component, 0), 1);\n    }\n    // limit the precision of all numbers to at most 4 digits in fractional part\n    return (Math.round(component * 10000) / 10000);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\n/**\n * For colors which fall within the sRGB space, the browser can\n * be used to convert the color string into a rgb /rgba string.\n *\n * For other colors, it will be returned as specified (i.e. for\n * newer formats like display-p3)\n *\n * See: https://www.w3.org/TR/css-color-4/#serializing-sRGB-values\n */\nfunction getRgbStringViaBrowser(color) {\n    const element = document.createElement('div');\n    element.style.display = 'none';\n    // We append to the body as it is the most reliable way to get a color reading\n    // appending to the chart container or similar element can result in the following\n    // getComputedStyle returning empty strings on each check.\n    document.body.appendChild(element);\n    element.style.color = color;\n    const computed = window.getComputedStyle(element).color;\n    document.body.removeChild(element);\n    return computed;\n}\nclass ColorParser {\n    constructor(customParsers, initialCache) {\n        this._private__rgbaCache = new Map();\n        this._private__customParsers = customParsers;\n        if (initialCache) {\n            this._private__rgbaCache = initialCache;\n        }\n    }\n    /**\n     * We fallback to RGBA here since supporting alpha transformations\n     * on wider color gamuts would currently be a lot of extra code\n     * for very little benefit due to actual usage.\n     */\n    _internal_applyAlpha(color, alpha) {\n        // special case optimization\n        if (color === 'transparent') {\n            return color;\n        }\n        const originRgba = this._private__parseColor(color);\n        const originAlpha = originRgba[3];\n        return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n    }\n    _internal_generateContrastColors(background) {\n        const rgba = this._private__parseColor(background);\n        return {\n            _internal_background: `rgb(${rgba[0]}, ${rgba[1]}, ${rgba[2]})`, // no alpha\n            _internal_foreground: rgbaToGrayscale(rgba) > 160 ? 'black' : 'white',\n        };\n    }\n    _internal_colorStringToGrayscale(background) {\n        return rgbaToGrayscale(this._private__parseColor(background));\n    }\n    _internal_gradientColorAtPercent(topColor, bottomColor, percent) {\n        const [topR, topG, topB, topA] = this._private__parseColor(topColor);\n        const [bottomR, bottomG, bottomB, bottomA] = this._private__parseColor(bottomColor);\n        const resultRgba = [\n            normalizeRgbComponent((topR + percent * (bottomR - topR))),\n            normalizeRgbComponent((topG + percent * (bottomG - topG))),\n            normalizeRgbComponent((topB + percent * (bottomB - topB))),\n            normalizeAlphaComponent((topA + percent * (bottomA - topA))),\n        ];\n        return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n    }\n    _private__parseColor(color) {\n        const cached = this._private__rgbaCache.get(color);\n        if (cached) {\n            return cached;\n        }\n        const computed = getRgbStringViaBrowser(color);\n        const match = computed.match(/^rgba?\\s*\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d*\\.?\\d+))?\\)$/);\n        if (!match) {\n            if (this._private__customParsers.length) {\n                for (const parser of this._private__customParsers) {\n                    const result = parser(color);\n                    if (result) {\n                        this._private__rgbaCache.set(color, result);\n                        return result;\n                    }\n                }\n            }\n            throw new Error(`Failed to parse color: ${color}`);\n        }\n        const rgba = [\n            parseInt(match[1], 10),\n            parseInt(match[2], 10),\n            parseInt(match[3], 10),\n            (match[4] ? parseFloat(match[4]) : 1),\n        ];\n        this._private__rgbaCache.set(color, rgba);\n        return rgba;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const draw = (radiusMedia) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n                const centerY = point._internal_y * verticalPixelRatio;\n                const radius = radiusMedia * verticalPixelRatio + correction;\n                ctx.moveTo(centerX, centerY);\n                ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair, pane) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__pane = pane;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        this._private__createMarkerRenderersIfNeeded();\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__createMarkerRenderersIfNeeded() {\n        const serieses = this._private__pane._internal_orderedSources();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n    }\n    _private__updateImpl() {\n        const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */ || !this._private__crosshair._internal_visible();\n        const serieses = this._private__pane._internal_orderedSeries();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        this._private__createMarkerRenderersIfNeeded();\n        serieses.forEach((s, index) => {\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            const firstValue = s._internal_firstValue();\n            if (forceHidden || seriesData === null || !s._internal_visible() || firstValue === null) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = seriesData._internal_borderColor ?? this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source, pane) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer(pane) {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const crosshairOptions = this._private__pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n            data._internal_horzLine._internal_visible = false;\n            data._internal_vertLine._internal_visible = false;\n            return;\n        }\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(this._private__pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    return borderRadius.map((x) => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    /**\n     * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n     * be able to switch to the native version soon.\n     */\n    ctx.beginPath();\n    if (ctx.roundRect) {\n        ctx.roundRect(x, y, w, h, radii);\n        return;\n    }\n    /*\n     * Deprecate the rest in v5.\n     */\n    ctx.lineTo(x + w - radii[1], y);\n    if (radii[1] !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n    }\n    ctx.lineTo(x + w, y + h - radii[2]);\n    if (radii[2] !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n    }\n    ctx.lineTo(x + radii[3], y + h);\n    if (radii[3] !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n    }\n    ctx.lineTo(x, y + radii[0]);\n    if (radii[0] !== 0) {\n        ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n    }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n    if (backgroundColor !== 'transparent') {\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    if (borderColor !== 'transparent') {\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            /*\n             draw label. backgroundColor will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n             Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n            */\n            if (geom._internal_alignRight) {\n                drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], backgroundColor);\n            }\n            else {\n                drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], backgroundColor);\n            }\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = this._private__commonData._internal_fixedCoordinate ?? this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = this._private__priceScale._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = this._private__model._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n    /**\n     * This mode disables rendering of the crosshair.\n     */\n    CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the open/high/low/close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"MagnetOHLC\"] = 3] = \"MagnetOHLC\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = false; // initially the crosshair should not be visible, until the user interacts.\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__crosshairPaneViewCache = new WeakMap();\n        this._private__markersPaneViewCache = new WeakMap();\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n        this._internal_updateAllViews();\n    }\n    _internal_paneViews(pane) {\n        let crosshairPaneView = this._private__crosshairPaneViewCache.get(pane);\n        if (!crosshairPaneView) {\n            crosshairPaneView = new CrosshairPaneView(this, pane);\n            this._private__crosshairPaneViewCache.set(pane, crosshairPaneView);\n        }\n        let markersPaneView = this._private__markersPaneViewCache.get(pane);\n        if (!markersPaneView) {\n            markersPaneView = new CrosshairMarksPaneView(this._private__model, this, pane);\n            this._private__markersPaneViewCache.set(pane, markersPaneView);\n        }\n        return [crosshairPaneView, markersPaneView];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__model._internal_panes().forEach((pane) => {\n            this._private__crosshairPaneViewCache.get(pane)?._internal_update();\n            this._private__markersPaneViewCache.get(pane)?._internal_update();\n        });\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nclass FormatterBase {\n    formatTickmarks(prices) {\n        return prices.map((price) => this.format(price));\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.'};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter extends FormatterBase {\n    constructor(priceScale, minMove) {\n        super();\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter extends FormatterBase {\n    constructor(precision) {\n        super();\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        if (!this._private__data?._internal_visible) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = this._private__animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = this._private__animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n    _private__color(seriesLineColor, stage, startAlpha, endAlpha) {\n        const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n        return this._private__series._internal_model()._internal_colorParser()._internal_applyAlpha(seriesLineColor, alpha);\n    }\n    _private__animationData(durationSinceStart, lineColor) {\n        const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n        let currentStageData;\n        for (const stageData of animationStagesData) {\n            if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n                currentStageData = stageData;\n                break;\n            }\n        }\n        assert(currentStageData !== undefined, 'Last price animation internal logic error');\n        const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n        return {\n            _internal_fillColor: this._private__color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n            _internal_strokeColor: this._private__color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n            _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n        };\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = this._private__source._internal_model()._internal_colorParser()._internal_generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n    const firstFinite = Number.isFinite(valueOne);\n    const secondFinite = Number.isFinite(valueTwo);\n    if (firstFinite && secondFinite) {\n        return method(valueOne, valueTwo);\n    }\n    return !firstFinite && !secondFinite ? fallback : (firstFinite ? valueOne : valueTwo);\n}\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        return {\n            priceRange: this._private__priceRange === null ? null : this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = this._private__series._internal_model()._internal_colorParser()._internal_generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor),\n            _internal_barBorderColor: currentBar._internal_borderColor ?? (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: currentBar._internal_wickColor ?? (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? customStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n            _internal_lineColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n            _internal_topColor: currentBar._internal_topColor ?? areaStyle.topColor,\n            _internal_bottomColor: currentBar._internal_bottomColor ?? areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: currentBar._internal_topLineColor ?? baselineStyle.topLineColor,\n            _internal_bottomLineColor: currentBar._internal_bottomLineColor ?? baselineStyle.bottomLineColor,\n            _internal_topFillColor1: currentBar._internal_topFillColor1 ?? baselineStyle.topFillColor1,\n            _internal_topFillColor2: currentBar._internal_topFillColor2 ?? baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: currentBar._internal_bottomFillColor1 ?? baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: currentBar._internal_bottomFillColor2 ?? baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? lineStyle.color,\n            _internal_lineColor: currentBar._internal_color ?? lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value) === lower) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n        this._private__indices = [];\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return {\n            ...this._private__valueAt(pos),\n            _internal_index: this._private__indexAt(pos),\n        };\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n        this._private__indices = plotRows.map((plotRow) => plotRow._internal_index);\n    }\n    // TimePointIndex values for fulfilled data points\n    _internal_indices() {\n        return this._private__indices;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass PrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        this._private__baseRenderer.drawBackground?.(target);\n    }\n}\nclass PrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (this._private__cache?._internal_base === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new PrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        return this._private__paneView.zOrder?.() ?? 'normal';\n    }\n}\nclass PrimitiveWrapper {\n    constructor(primitive) {\n        this._private__paneViewsCache = null;\n        this._internal__primitive = primitive;\n    }\n    _internal_primitive() {\n        return this._internal__primitive;\n    }\n    _internal_updateAllViews() {\n        this._internal__primitive.updateAllViews?.();\n    }\n    _internal_paneViews() {\n        const base = this._internal__primitive.paneViews?.() ?? [];\n        if (this._private__paneViewsCache?._internal_base === base) {\n            return this._private__paneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new PrimitivePaneViewWrapper(pw));\n        this._private__paneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_hitTest(x, y) {\n        return this._internal__primitive.hitTest?.(x, y) ?? null;\n    }\n}\nlet PanePrimitiveWrapper$1 = class PanePrimitiveWrapper extends PrimitiveWrapper {\n    _internal_labelPaneViews() {\n        return [];\n    }\n};\n\nclass SeriesPrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        this._private__baseRenderer.drawBackground?.(target);\n    }\n}\nclass SeriesPrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (this._private__cache?._internal_base === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        return this._private__paneView.zOrder?.() ?? 'normal';\n    }\n}\nfunction getAxisViewData(baseView) {\n    return {\n        _internal_text: baseView.text(),\n        _internal_coordinate: baseView.coordinate(),\n        _internal_fixedCoordinate: baseView.fixedCoordinate?.(),\n        _internal_color: baseView.textColor(),\n        _internal_background: baseView.backColor(),\n        _internal_visible: baseView.visible?.() ?? true,\n        _internal_tickVisible: baseView.tickVisible?.() ?? true,\n    };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n    constructor(baseView, timeScale) {\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__baseView = baseView;\n        this._private__timeScale = timeScale;\n    }\n    _internal_renderer() {\n        this._private__renderer._internal_setData({\n            _internal_width: this._private__timeScale._internal_width(),\n            ...getAxisViewData(this._private__baseView),\n        });\n        return this._private__renderer;\n    }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n    constructor(baseView, priceScale) {\n        super();\n        this._private__baseView = baseView;\n        this._private__priceScale = priceScale;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        const data = getAxisViewData(this._private__baseView);\n        commonRendererData._internal_background = data._internal_background;\n        axisRendererData._internal_color = data._internal_color;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        commonRendererData._internal_coordinate = data._internal_coordinate;\n        commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n        axisRendererData._internal_text = data._internal_text;\n        axisRendererData._internal_visible = data._internal_visible;\n        axisRendererData._internal_tickVisible = data._internal_tickVisible;\n    }\n}\nclass SeriesPrimitiveWrapper extends PrimitiveWrapper {\n    constructor(primitive, series) {\n        super(primitive);\n        this._private__timeAxisViewsCache = null;\n        this._private__priceAxisViewsCache = null;\n        this._private__priceAxisPaneViewsCache = null;\n        this._private__timeAxisPaneViewsCache = null;\n        this._private__series = series;\n    }\n    _internal_timeAxisViews() {\n        const base = this._internal__primitive.timeAxisViews?.() ?? [];\n        if (this._private__timeAxisViewsCache?._internal_base === base) {\n            return this._private__timeAxisViewsCache._internal_wrapper;\n        }\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const wrapper = base.map((aw) => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n        this._private__timeAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisViews() {\n        const base = this._internal__primitive.priceAxisViews?.() ?? [];\n        if (this._private__priceAxisViewsCache?._internal_base === base) {\n            return this._private__priceAxisViewsCache._internal_wrapper;\n        }\n        const priceScale = this._private__series._internal_priceScale();\n        const wrapper = base.map((aw) => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n        this._private__priceAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisPaneViews() {\n        const base = this._internal__primitive.priceAxisPaneViews?.() ?? [];\n        if (this._private__priceAxisPaneViewsCache?._internal_base === base) {\n            return this._private__priceAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__priceAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisPaneViews() {\n        const base = this._internal__primitive.timeAxisPaneViews?.() ?? [];\n        if (this._private__timeAxisPaneViewsCache?._internal_base === base) {\n            return this._private__timeAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__timeAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        return (this._internal__primitive.autoscaleInfo?.(startTimePoint, endTimePoint) ?? null);\n    }\n}\n\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n    primitives.forEach((wrapper) => {\n        extractor(wrapper).forEach((paneView) => {\n            if (paneView._internal_zOrder() !== zOrder) {\n                return;\n            }\n            destination.push(paneView);\n        });\n    });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n    return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n    return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n    return wrapper._internal_timeAxisPaneViews();\n}\nconst lineBasedSeries = ['Area', 'Line', 'Baseline'];\nclass Series extends PriceDataSource {\n    constructor(model, seriesType, options, createPaneView, customPaneView) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__animationTimeoutId = null;\n        this._private__primitives = [];\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (lineBasedSeries.includes(this._private__seriesType)) {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__paneView = createPaneView(this, this._internal_model(), customPaneView);\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__paneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_priceLines() {\n        return this._private__customPriceLines;\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return res;\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        res.unshift(animationPaneView);\n        return res;\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n        return res;\n    }\n    _internal_bottomPaneViews() {\n        return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n    }\n    _internal_pricePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n    }\n    _internal_timePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _internal_labelPaneViews() {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        this._private__primitives.forEach((wrapper) => {\n            result.push(...wrapper._internal_priceAxisViews());\n        });\n        return result;\n    }\n    _internal_timeAxisViews() {\n        const res = [];\n        this._private__primitives.forEach((wrapper) => {\n            res.push(...wrapper._internal_timeAxisViews());\n        });\n        return res;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        this._private__lastPriceAnimationPaneView?._internal_update();\n        this._private__primitives.forEach((wrapper) => wrapper._internal_updateAllViews());\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n    }\n    _internal_customSeriesPlotValuesBuilder() {\n        if (this._private__seriesType !== 'Custom') {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_priceValueBuilder(data);\n        };\n    }\n    _internal_customSeriesWhitespaceCheck() {\n        if (this._private__seriesType !== 'Custom') {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_isWhitespace(data);\n        };\n    }\n    _internal_fulfilledIndices() {\n        return this._private__data._internal_indices();\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        let margins = null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        this._private__primitives.forEach((primitive) => {\n            const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n            if (primitiveAutoscale?.priceRange) {\n                const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n                range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n            }\n            if (primitiveAutoscale?.margins) {\n                margins = primitiveAutoscale.margins;\n            }\n        });\n        return new AutoscaleInfoImpl(range, margins);\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                const formatter = this._private__options.priceFormat.formatter;\n                this._private__formatter = {\n                    format: formatter,\n                    formatTickmarks: this._private__options.priceFormat.tickmarksFormatter ?? ((prices) => prices.map(formatter)),\n                };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__extractPaneViews(extractor, zOrder) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n        return res;\n    }\n}\n\nconst magnetPlotRowKeys = [\n    3 /* PlotRowValueIndex.Close */,\n];\nconst magnetOHLCPlotRowKeys = [\n    0 /* PlotRowValueIndex.Open */,\n    1 /* PlotRowValueIndex.High */,\n    2 /* PlotRowValueIndex.Low */,\n    3 /* PlotRowValueIndex.Close */,\n];\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof Series)));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            const plotRowKeys = this._private__options.mode === 3 /* CrosshairMode.MagnetOHLC */\n                ? magnetOHLCPlotRowKeys\n                : magnetPlotRowKeys;\n            return acc.concat(plotRowKeys.map((key) => ps._internal_priceToCoordinate(bar._internal_value[key], firstPrice._internal_value)));\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                // need this conversiom because TimeMark is a part of external interface\n                // and fields inside TimeMark are not minified\n                _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map((tm) => {\n                    return { _internal_coord: tm.coord };\n                }),\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        const span = this._internal_tickSpan(high, low);\n        this._private__updateMarks(firstValue, span, high, low, minCoord, maxCoord);\n        if (priceScale._internal_hasVisibleEdgeMarks() && this._private__shouldApplyEdgeMarks(span, low, high)) {\n            const padding = this._private__priceScale._internal_getEdgeMarksPadding();\n            this._private__applyEdgeMarks(firstValue, span, minCoord, maxCoord, padding, padding * 2);\n        }\n        const logicals = this._private__marks.map((mark) => mark._internal_logical);\n        const labels = this._private__priceScale._internal_formatLogicalTickmarks(logicals);\n        for (let i = 0; i < this._private__marks.length; i++) {\n            this._private__marks[i]._internal_label = labels[i];\n        }\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n    _private__updateMarks(firstValue, span, high, low, minCoord, maxCoord) {\n        const marks = this._private__marks;\n        const priceScale = this._private__priceScale;\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < marks.length) {\n                marks[targetIndex]._internal_coord = coord;\n                marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n                marks[targetIndex]._internal_logical = logical;\n            }\n            else {\n                marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                    _internal_logical: logical,\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        marks.length = targetIndex;\n    }\n    _private__applyEdgeMarks(firstValue, span, minCoord, maxCoord, minPadding, maxPadding) {\n        const marks = this._private__marks;\n        // top boundary\n        const topMark = this._private__computeBoundaryPriceMark(firstValue, minCoord, minPadding, maxPadding);\n        // bottom boundary\n        const bottomMark = this._private__computeBoundaryPriceMark(firstValue, maxCoord, -maxPadding, -minPadding);\n        const spanPx = this._private__logicalToCoordinateFunc(0, firstValue, true)\n            - this._private__logicalToCoordinateFunc(span, firstValue, true);\n        if (marks.length > 0 && marks[0]._internal_coord - topMark._internal_coord < spanPx / 2) {\n            marks.shift();\n        }\n        if (marks.length > 0 && bottomMark._internal_coord - marks[marks.length - 1]._internal_coord < spanPx / 2) {\n            marks.pop();\n        }\n        marks.unshift(topMark);\n        marks.push(bottomMark);\n    }\n    _private__computeBoundaryPriceMark(firstValue, coord, minPadding, maxPadding) {\n        const avgPadding = (minPadding + maxPadding) / 2;\n        const value1 = this._private__coordinateToLogicalFunc(coord + minPadding, firstValue);\n        const value2 = this._private__coordinateToLogicalFunc(coord + maxPadding, firstValue);\n        const minValue = Math.min(value1, value2);\n        const maxValue = Math.max(value1, value2);\n        const valueSpan = Math.max(0.1, this._internal_tickSpan(maxValue, minValue));\n        const value = this._private__coordinateToLogicalFunc(coord + avgPadding, firstValue);\n        const roundedValue = value - (value % valueSpan);\n        const roundedCoord = this._private__logicalToCoordinateFunc(roundedValue, firstValue, true);\n        return { _internal_label: this._private__priceScale._internal_formatLogical(roundedValue), _internal_coord: roundedCoord, _internal_logical: roundedValue };\n    }\n    _private__shouldApplyEdgeMarks(span, low, high) {\n        let range = ensure(this._private__priceScale._internal_priceRange());\n        if (this._private__priceScale._internal_isLog()) {\n            range = convertPriceRangeFromLog(range, this._private__priceScale._internal_getLogFormula());\n        }\n        return (range._internal_minValue() - low < span) && (high - range._internal_maxValue() < span);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions, colorParser) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__isCustomPriceRange = false;\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__formatterSource = null;\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__colorParser = colorParser;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isCustomPriceRange() {\n        return this._private__isCustomPriceRange;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_getLogFormula() {\n        return this._private__logFormula;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_setCustomPriceRange(newPriceRange) {\n        this._internal_setPriceRange(newPriceRange);\n        this._private__toggleCustomPriceRange(newPriceRange !== null);\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (!this._private__cachedOrderedSources) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(logical);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatLogicalTickmarks(logicals) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentageTickmarks(logicals);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().formatTickmarks(logicals);\n            default:\n                return this._private__formatTickmarks(logicals);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource)._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return this._private__formatPercentage(price, percentageFormatter);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_hasVisibleEdgeMarks() {\n        return this._private__options.ensureEdgeTickMarksVisible && this._internal_isAutoScale();\n    }\n    _internal_getEdgeMarksPadding() {\n        return this._internal_fontSize() / 2;\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        let zOrder = Infinity;\n        this._private__formatterSource = null;\n        // choose source with the lowest zorder\n        for (const source of this._private__dataSources) {\n            if (source._internal_zorder() < zOrder) {\n                zOrder = source._internal_zorder();\n                this._private__formatterSource = source;\n            }\n        }\n        let base = 100;\n        if (this._private__formatterSource !== null) {\n            base = Math.round(1 / this._private__formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (this._private__formatterSource !== null) {\n                // user\n                this._private__formatter = this._private__formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_colorParser() {\n        return this._private__colorParser;\n    }\n    _private__toggleCustomPriceRange(v) {\n        this._private__isCustomPriceRange = v;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        if (this._internal_isCustomPriceRange() && !this._internal_isAutoScale()) {\n            return;\n        }\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginBelow, margins.below);\n                    }\n                }\n            }\n        }\n        if (this._internal_hasVisibleEdgeMarks()) {\n            marginAbove = Math.max(marginAbove, this._internal_getEdgeMarksPadding());\n            marginBelow = Math.max(marginBelow, this._internal_getEdgeMarksPadding());\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource;\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatValue(value, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(value);\n        }\n        return formatter(value);\n    }\n    _private__formatValues(values, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.formatTickmarks(values);\n        }\n        return formatter(values);\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n    }\n    _private__formatTickmarks(prices, fallbackFormatter) {\n        const priceFormatter = this._private__localizationOptions.priceFormatter;\n        return this._private__formatValues(prices, this._private__localizationOptions.tickmarksPriceFormatter ?? (priceFormatter ? (values) => values.map(priceFormatter) : undefined), fallbackFormatter);\n    }\n    _private__formatPercentage(percentage, fallbackFormatter) {\n        return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n    }\n    _private__formatPercentageTickmarks(percentages, fallbackFormatter) {\n        const tickmarksPercentageFormatter = this._private__localizationOptions.percentageFormatter;\n        return this._private__formatValues(percentages, this._private__localizationOptions.tickmarksPercentageFormatter ?? (tickmarksPercentageFormatter ? (values) => values.map(tickmarksPercentageFormatter) : undefined), fallbackFormatter);\n    }\n}\n\nfunction isSeries(source) {\n    return source instanceof Series;\n}\nconst DEFAULT_STRETCH_FACTOR = 1;\nconst MIN_PANE_HEIGHT = 30;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__preserveEmptyPane = false;\n        this._private__destroyed = new Delegate();\n        this._private__primitives = [];\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__primitives = this._private__primitives.filter((primitive) => {\n            const p = primitive._internal_primitive();\n            if (p.detached) {\n                p.detached();\n            }\n            return false;\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_setPreserveEmptyPane(preserve) {\n        this._private__preserveEmptyPane = preserve;\n    }\n    _internal_preserveEmptyPane() {\n        return this._private__preserveEmptyPane;\n    }\n    _internal_series() {\n        return this._private__dataSources.filter(isSeries);\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, keepSourcesOrder) {\n        this._private__insertDataSource(source, targetScaleId, keepSourcesOrder ? source._internal_zorder() : this._private__dataSources.length);\n    }\n    _internal_removeDataSource(source, keepSourceOrder) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        if (!keepSourceOrder) {\n            this._private__dataSources.forEach((ds, i) => ds._internal_setZorder(i));\n        }\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_setSeriesOrder(series, order) {\n        order = clamp(order, 0, this._private__dataSources.length - 1);\n        const index = this._private__dataSources.indexOf(series);\n        assert(index !== -1, 'setSeriesOrder: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        this._private__dataSources.splice(order, 0, series);\n        this._private__dataSources.forEach((ps, i) => ps._internal_setZorder(i));\n        this._private__cachedOrderedSources = null;\n        for (const ps of [this._private__leftPriceScale, this._private__rightPriceScale]) {\n            ps._internal_invalidateSourcesCache();\n            ps._internal_updateFormatter();\n        }\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSeries() {\n        return this._internal_orderedSources().filter(isSeries);\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new PanePrimitiveWrapper$1(primitive));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n        if (source.detached) {\n            source.detached();\n        }\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_primitives() {\n        return this._private__primitives;\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__insertDataSource(source, priceScaleId, order) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.splice(order, 0, source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        source._internal_setZorder(order);\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = { visible: true, autoScale: true, ...clone(options) };\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options()['layout'], this._private__model._internal_options().localization, this._private__model._internal_colorParser());\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n    return (!reference ||\n        (item === 'top' && reference !== 'top') ||\n        (item === 'normal' && reference === 'bottom'));\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n    let bestPrimitiveHit;\n    let bestHitSource;\n    for (const source of sources) {\n        const primitiveHitResults = source._internal_primitiveHitTest?.(x, y) ?? [];\n        for (const hitResult of primitiveHitResults) {\n            if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit?.zOrder)) {\n                bestPrimitiveHit = hitResult;\n                bestHitSource = source;\n            }\n        }\n    }\n    if (!bestPrimitiveHit || !bestHitSource) {\n        return null;\n    }\n    return {\n        _internal_hit: bestPrimitiveHit,\n        _internal_source: bestHitSource,\n    };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n    return {\n        _internal_source: primitiveHit._internal_source,\n        _internal_object: {\n            _internal_externalId: primitiveHit._internal_hit.externalId,\n        },\n        _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle,\n    };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y, pane) {\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer(pane);\n        if (renderer !== null && renderer._internal_hitTest) {\n            const result = renderer._internal_hitTest(x, y);\n            if (result !== null) {\n                return {\n                    _internal_view: paneView,\n                    _internal_object: result,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction isDataSource(source) {\n    return source._internal_paneViews !== undefined;\n}\n// eslint-disable-next-line complexity\nfunction hitTestPane(pane, x, y) {\n    const sources = [pane, ...pane._internal_orderedSources()];\n    const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n    if (bestPrimitiveHit?._internal_hit.zOrder === 'top') {\n        // a primitive hit on the 'top' layer will always beat the built-in hit tests\n        // (on normal layer) so we can return early here.\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    for (const source of sources) {\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n            // a primitive will be drawn above a built-in item like a series marker\n            // therefore it takes precedence here.\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n        if (isDataSource(source)) {\n            const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y, pane);\n            if (sourceResult !== null) {\n                return {\n                    _internal_source: source,\n                    _internal_view: sourceResult._internal_view,\n                    _internal_object: sourceResult._internal_object,\n                };\n            }\n        }\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n    }\n    if (bestPrimitiveHit?._internal_hit) {\n        // return primitive hits for the 'bottom' layer\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    return null;\n}\n\nclass FormattedLabelsCache {\n    constructor(format, horzScaleBehavior, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark.time;\n        const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n        this._private__uniformDistribution = false;\n    }\n    _internal_setUniformDistribution(val) {\n        this._private__uniformDistribution = val;\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                index: index,\n                time: point.time,\n                weight: point.timeWeight,\n                originalTime: point.originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth, checkIndicesForData, indicesWithDataMap, indicesWithDataId) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null ||\n            this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark ||\n            indicesWithDataId !== this._private__cache._internal_indicesWithDataId ||\n            checkIndicesForData !== this._private__cache._internal_checkIndicesForData) {\n            this._private__cache = {\n                _internal_indicesWithDataId: indicesWithDataId,\n                _internal_checkIndicesForData: checkIndicesForData,\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0].index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerBound(marks, sinceIndex, (tm) => tm.index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap) {\n        let marks = [];\n        const canBeIncluded = (mark) => !checkIndicesForData || indicesWithDataMap.has(mark.index);\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark.index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark.index;\n                    if (lastIndex < currentIndex && canBeIncluded(lastMark)) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark &&\n                    currentIndex - leftIndex >= maxIndexesPerMark &&\n                    canBeIncluded(mark)) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n                else {\n                    if (this._private__uniformDistribution) {\n                        return prevMarks;\n                    }\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                if (canBeIncluded(prevMarks[prevMarksPointer])) {\n                    marks.push(prevMarks[prevMarksPointer]);\n                }\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight$2(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n    constructor(model, options, localizationOptions, horzScaleBehavior) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__indicesWithData = new Map();\n        this._private__indicesWithDataUpdateId = -1;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__updateDateTimeFormatter();\n        this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n        this._internal_recalculateIndicesWithData();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined || options.maxBarSpacing !== undefined) {\n            // yes, if we apply bar spacing constrains then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing(options.barSpacing ?? this._private__barSpacing);\n        }\n        if (options.ignoreWhitespaceIndices !== undefined && options.ignoreWhitespaceIndices !== this._private__options.ignoreWhitespaceIndices) {\n            this._internal_recalculateIndicesWithData();\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        return this._private__points[index]?.time ?? null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        return this._private__points[index] ?? null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x, considerIgnoreWhitespace) {\n        const index = Math.ceil(this._private__coordinateToFloatIndex(x));\n        if (!considerIgnoreWhitespace ||\n            !this._private__options.ignoreWhitespaceIndices ||\n            this._private__shouldConsiderIndex(index)) {\n            return index;\n        }\n        return this._private__findNearestIndexWithData(index);\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options()['layout'].fontSize;\n        const pixelsPer8Characters = (fontSize + 4) * 5;\n        const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n        const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth, this._private__options.ignoreWhitespaceIndices, this._private__indicesWithData, this._private__indicesWithDataUpdateId);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label.coord = this._internal_indexToCoordinate(tm.index);\n                label.label = this._private__formatLabel(tm);\n                label.weight = tm.weight;\n            }\n            else {\n                label = {\n                    needAlignCoordinate: false,\n                    coord: this._internal_indexToCoordinate(tm.index),\n                    label: this._private__formatLabel(tm),\n                    weight: tm.weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label.needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label.needAlignCoordinate = (isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm.index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n        }\n        return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n    }\n    _internal_recalculateIndicesWithData() {\n        if (!this._private__options.ignoreWhitespaceIndices) {\n            return;\n        }\n        this._private__indicesWithData.clear();\n        const series = this._private__model._internal_serieses();\n        for (const s of series) {\n            for (const index of s._internal_fulfilledIndices()) {\n                this._private__indicesWithData.set(index, true);\n            }\n        }\n        this._private__indicesWithDataUpdateId++;\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const handleScroll = this._private__model._internal_options()['handleScroll'];\n        const handleScale = this._private__model._internal_options()['handleScale'];\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const barSpacing = clamp(this._private__barSpacing, this._private__minBarSpacing(), this._private__maxBarSpacing());\n        if (this._private__barSpacing !== barSpacing) {\n            this._private__barSpacing = barSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__maxBarSpacing() {\n        if (this._private__options.maxBarSpacing > 0) {\n            // option takes precedance\n            return this._private__options.maxBarSpacing;\n        }\n        else {\n            // half of the width is default value for maximum bar spacing\n            return this._private__width * 0.5;\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark.weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            }, this._private__horzScaleBehavior);\n            this._private__formattedByWeight.set(tickMark.weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n    _private__shouldConsiderIndex(index) {\n        if (!this._private__options.ignoreWhitespaceIndices) {\n            return true;\n        }\n        return this._private__indicesWithData.get(index) || false;\n    }\n    _private__findNearestIndexWithData(x) {\n        const gen = testNearestIntegers(x);\n        const maxIndex = this._private__lastIndex();\n        while (maxIndex) {\n            const index = gen.next().value;\n            if (this._private__indicesWithData.get(index)) {\n                return index;\n            }\n            if (index < 0 || index > maxIndex) {\n                break;\n            }\n        }\n        return x; // fallback to original index\n    }\n}\nfunction* testNearestIntegers(num) {\n    const rounded = Math.round(num);\n    const isRoundedDown = rounded < num;\n    let offset = 1;\n    while (true) {\n        if (isRoundedDown) {\n            yield rounded + offset;\n            yield rounded - offset;\n        }\n        else {\n            yield rounded - offset;\n            yield rounded + offset;\n        }\n        offset++;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nfunction isPanePrimitive(source) {\n    return source instanceof Pane;\n}\nclass ChartModel {\n    constructor(invalidateHandler, options, horzScaleBehavior) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__colorParser = new ColorParser(this._private__options.layout.colorParsers);\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        if (options.addDefaultPane) {\n            this._private__getOrCreatePane(0);\n            this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        if (this._private__hoveredSource?._internal_source === source?._internal_source && this._private__hoveredSource?._internal_object?._internal_externalId === source?._internal_object?._internal_externalId) {\n            return;\n        }\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        // additional check to prevent unnecessary updates of same source\n        if (source !== null && source._internal_source !== prevSource?._internal_source) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options, paneIndex = 0) {\n        const pane = this._private__panes[paneIndex];\n        if (pane === undefined) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect pane index: ${paneIndex}`);\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            merge(this._private__options, {\n                leftPriceScale: options,\n            });\n            pane._internal_applyScaleOptions({\n                leftPriceScale: options,\n            });\n            this._private__priceScalesOptionsChanged._internal_fire();\n            this._internal_fullUpdate();\n            return;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            merge(this._private__options, {\n                rightPriceScale: options,\n            });\n            pane._internal_applyScaleOptions({\n                rightPriceScale: options,\n            });\n            this._private__priceScalesOptionsChanged._internal_fire();\n            this._internal_fullUpdate();\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId, paneIndex);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId, paneIndex) {\n        const pane = this._private__panes[paneIndex];\n        if (pane === undefined) {\n            return null;\n        }\n        const priceScale = pane._internal_priceScaleById(priceScaleId);\n        if (priceScale !== null) {\n            return {\n                _internal_pane: pane,\n                _internal_priceScale: priceScale,\n            };\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_removePane(index) {\n        if (this._private__panes.length === 1) {\n            return;\n        }\n        assert(index >= 0 && index < this._private__panes.length, 'Invalid pane index');\n        this._private__panes.splice(index, 1);\n        this._internal_fullUpdate();\n    }\n    _internal_changePanesHeight(paneIndex, height) {\n        if (this._private__panes.length < 2) {\n            return;\n        }\n        assert(paneIndex >= 0 && paneIndex < this._private__panes.length, 'Invalid pane index');\n        const targetPane = this._private__panes[paneIndex];\n        const totalStretch = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_stretchFactor(), 0);\n        const totalHeight = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_height(), 0);\n        const maxPaneHeight = totalHeight - MIN_PANE_HEIGHT * (this._private__panes.length - 1);\n        height = Math.min(maxPaneHeight, Math.max(MIN_PANE_HEIGHT, height));\n        const pixelStretchFactor = totalStretch / totalHeight;\n        const oldHeight = targetPane._internal_height();\n        targetPane._internal_setStretchFactor(height * pixelStretchFactor);\n        let otherPanesChange = height - oldHeight;\n        let panesCount = this._private__panes.length - 1;\n        for (const pane of this._private__panes) {\n            if (pane !== targetPane) {\n                const newPaneHeight = Math.min(maxPaneHeight, Math.max(30, pane._internal_height() - otherPanesChange / panesCount));\n                otherPanesChange -= (pane._internal_height() - newPaneHeight);\n                panesCount -= 1;\n                const newStretchFactor = newPaneHeight * pixelStretchFactor;\n                pane._internal_setStretchFactor(newStretchFactor);\n            }\n        }\n        this._internal_fullUpdate();\n    }\n    _internal_swapPanes(first, second) {\n        assert(first >= 0 && first < this._private__panes.length && second >= 0 && second < this._private__panes.length, 'Invalid pane index');\n        const firstPane = this._private__panes[first];\n        const secondPane = this._private__panes[second];\n        this._private__panes[first] = secondPane;\n        this._private__panes[second] = firstPane;\n        this._internal_fullUpdate();\n    }\n    _internal_movePane(from, to) {\n        assert(from >= 0 && from < this._private__panes.length && to >= 0 && to < this._private__panes.length, 'Invalid pane index');\n        if (from === to) {\n            return;\n        }\n        const [paneToMove] = this._private__panes.splice(from, 1);\n        this._private__panes.splice(to, 0, paneToMove);\n        this._internal_fullUpdate();\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x, true);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            const hitTest = hitTestPane(pane, x, y);\n            this._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object, _internal_cursorStyle: hitTest._internal_cursorStyle || null });\n            this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n        }\n    }\n    // A position provided external (not from an internal event listener)\n    _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n        const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n        const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n        this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n    }\n    _internal_clearCurrentPosition(skipEvent) {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(null, null, null);\n        }\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n            const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        if (isPanePrimitive(source)) {\n            return source;\n        }\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.percentageFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_addSeriesToPane(series, paneIndex) {\n        const pane = this._private__getOrCreatePane(paneIndex);\n        this._private__addSeriesToPane(series, pane);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        const paneImpl = ensureNotNull(pane);\n        this._private__serieses.splice(seriesIndex, 1);\n        paneImpl._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n        this._private__timeScale._internal_recalculateIndicesWithData();\n        this._private__cleanupIfPaneIsEmpty(paneImpl);\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series, true);\n        pane._internal_addDataSource(series, targetScaleId, true);\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_moveSeriesToPane(series, newPaneIndex) {\n        assert(newPaneIndex >= 0, 'Index should be greater or equal to 0');\n        const fromPaneIndex = this._private__seriesPaneIndex(series);\n        if (newPaneIndex === fromPaneIndex) {\n            return;\n        }\n        const previousPane = ensureNotNull(this._internal_paneForSource(series));\n        previousPane._internal_removeDataSource(series);\n        const newPane = this._private__getOrCreatePane(newPaneIndex);\n        this._private__addSeriesToPane(series, newPane);\n        if (previousPane._internal_dataSources().length === 0) {\n            this._private__cleanupIfPaneIsEmpty(previousPane);\n        }\n        this._internal_fullUpdate();\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = this._private__colorParser._internal_gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _internal_getPaneIndex(pane) {\n        return this._private__panes.indexOf(pane);\n    }\n    _internal_colorParser() {\n        return this._private__colorParser;\n    }\n    _internal_addPane() {\n        return this._private__addPane();\n    }\n    _private__addPane(index) {\n        const pane = new Pane(this._private__timeScale, this);\n        this._private__panes.push(pane);\n        const idx = index ?? this._private__panes.length - 1;\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(idx, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _private__getOrCreatePane(index) {\n        assert(index >= 0, 'Index should be greater or equal to 0');\n        index = Math.min(this._private__panes.length, index);\n        if (index < this._private__panes.length) {\n            return this._private__panes[index];\n        }\n        return this._private__addPane(index);\n    }\n    _private__seriesPaneIndex(series) {\n        return this._private__panes.findIndex((pane) => pane._internal_series().includes(series));\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__addSeriesToPane(series, pane) {\n        const priceScaleId = series._internal_options().priceScaleId;\n        const targetScaleId = priceScaleId !== undefined ? priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(series._internal_options());\n        }\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options['layout'];\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n    _private__cleanupIfPaneIsEmpty(pane) {\n        if (!pane._internal_preserveEmptyPane() && (pane._internal_dataSources().length === 0 && this._private__panes.length > 1)) {\n            this._private__panes.splice(this._internal_getPaneIndex(pane), 1);\n        }\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = { ...defaultParams, ...params };\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n    return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n        prevTime = cast(currentPoint.time)._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\nfunction businessDayConverter(time) {\n    let businessDay = time;\n    if (isString(time)) {\n        businessDay = stringToBusinessDay(time);\n    }\n    if (!isBusinessDay(businessDay)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: businessDay,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in 'implementation specific' way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\n\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\nclass HorzScaleBehaviorTime {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n        this.updateFormatter(options.localization);\n    }\n    preprocessData(data) {\n        if (Array.isArray(data)) {\n            convertStringsToBusinessDays(data);\n        }\n        else {\n            convertStringToBusinessDay(data);\n        }\n    }\n    createConverterToInternalObj(data) {\n        return ensureNotNull(selectTimeConverter(data));\n    }\n    key(item) {\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n            return item._internal_timestamp;\n        }\n        else {\n            return this.key(this.convertHorzItemToInternal(item));\n        }\n    }\n    cacheKey(item) {\n        const time = item;\n        return time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    }\n    convertHorzItemToInternal(item) {\n        return convertTime(item);\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        const dateFormat = options.dateFormat;\n        if (this._private__options.timeScale.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: options.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n        }\n    }\n    formatHorzItem(item) {\n        const tp = item;\n        return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n    }\n    formatTickmark(tickMark, localizationOptions) {\n        const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n        const options = this._private__options.timeScale;\n        if (options.tickMarkFormatter !== undefined) {\n            const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n    }\n    maxTickMarkWeight(tickMarks) {\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight$2, tickMarks[0]).weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        return maxWeight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        fillWeightsForPoints(sortedTimePoints, startIndex);\n    }\n    static _internal_applyDefaults(options) {\n        return merge({ localization: { dateFormat: 'dd MMM \\'yy' } }, options ?? {});\n    }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if (navigator?.userAgentData?.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\nclass PaneSeparator {\n    constructor(chartWidget, topPaneIndex, bottomPaneIndex) {\n        this._private__handle = null;\n        this._private__mouseEventHandler = null;\n        this._private__resizeEnabled = true;\n        this._private__resizeInfo = null;\n        this._private__chartWidget = chartWidget;\n        this._private__topPane = chartWidget._internal_paneWidgets()[topPaneIndex];\n        this._private__bottomPane = chartWidget._internal_paneWidgets()[bottomPaneIndex];\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.style.height = 1 /* SeparatorConstants.SeparatorHeight */ + 'px';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.position = 'relative';\n        this._private__cell.style.padding = '0';\n        this._private__cell.style.margin = '0';\n        this._private__cell.setAttribute('colspan', '3');\n        this._private__updateBorderColor();\n        this._private__rowElement.appendChild(this._private__cell);\n        this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n        if (!this._private__resizeEnabled) {\n            this._private__handle = null;\n            this._private__mouseEventHandler = null;\n        }\n        else {\n            this._private__addResizableHandle();\n        }\n    }\n    _internal_destroy() {\n        if (this._private__mouseEventHandler !== null) {\n            this._private__mouseEventHandler._internal_destroy();\n        }\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_getSize() {\n        return size$1({\n            width: this._private__topPane._internal_getSize().width,\n            height: 1 /* SeparatorConstants.SeparatorHeight */,\n        });\n    }\n    _internal_getBitmapSize() {\n        return size$1({\n            width: this._private__topPane._internal_getBitmapSize().width,\n            height: 1 /* SeparatorConstants.SeparatorHeight */ * window.devicePixelRatio,\n        });\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        ctx.fillStyle = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n        ctx.fillRect(x, y, bitmapSize.width, bitmapSize.height);\n    }\n    _internal_update() {\n        this._private__updateBorderColor();\n        if (this._private__chartWidget._internal_options()['layout'].panes.enableResize !== this._private__resizeEnabled) {\n            this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n            if (this._private__resizeEnabled) {\n                this._private__addResizableHandle();\n            }\n            else {\n                if (this._private__handle !== null) {\n                    this._private__cell.removeChild(this._private__handle._internal_backgroundElement);\n                    this._private__cell.removeChild(this._private__handle._internal_element);\n                    this._private__handle = null;\n                }\n                if (this._private__mouseEventHandler !== null) {\n                    this._private__mouseEventHandler._internal_destroy();\n                    this._private__mouseEventHandler = null;\n                }\n            }\n        }\n    }\n    _private__addResizableHandle() {\n        const backgroundElement = document.createElement('div');\n        const bgStyle = backgroundElement.style;\n        bgStyle.position = 'fixed';\n        bgStyle.display = 'none';\n        bgStyle.zIndex = '49';\n        bgStyle.top = '0';\n        bgStyle.left = '0';\n        bgStyle.width = '100%';\n        bgStyle.height = '100%';\n        bgStyle.cursor = 'row-resize';\n        this._private__cell.appendChild(backgroundElement);\n        const element = document.createElement('div');\n        const style = element.style;\n        style.position = 'absolute';\n        style.zIndex = '50';\n        style.top = '-4px';\n        style.height = '9px';\n        style.width = '100%';\n        style.backgroundColor = '';\n        style.cursor = 'row-resize';\n        this._private__cell.appendChild(element);\n        const handlers = {\n            _internal_mouseEnterEvent: this._private__mouseOverEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(element, handlers, {\n            _internal_treatVertTouchDragAsPageScroll: () => false,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n        this._private__handle = { _internal_element: element, _internal_backgroundElement: backgroundElement };\n    }\n    _private__updateBorderColor() {\n        this._private__cell.style.background = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n    }\n    _private__mouseOverEvent(event) {\n        if (this._private__handle !== null) {\n            this._private__handle._internal_element.style.backgroundColor = this._private__chartWidget._internal_options()['layout'].panes.separatorHoverColor;\n        }\n    }\n    _private__mouseLeaveEvent(event) {\n        if (this._private__handle !== null && this._private__resizeInfo === null) {\n            this._private__handle._internal_element.style.backgroundColor = '';\n        }\n    }\n    _private__mouseDownEvent(event) {\n        if (this._private__handle === null) {\n            return;\n        }\n        const totalStretch = this._private__topPane._internal_state()._internal_stretchFactor() + this._private__bottomPane._internal_state()._internal_stretchFactor();\n        const totalHeight = this._private__topPane._internal_getSize().height + this._private__bottomPane._internal_getSize().height;\n        const pixelStretchFactor = totalStretch / totalHeight;\n        const minPaneStretch = 30 /* SeparatorConstants.MinPaneHeight */ * pixelStretchFactor;\n        if (totalStretch <= minPaneStretch * 2) {\n            // cannot resize panes that already have less than minimal height\n            // that's possible if there are many panes on the chart\n            return;\n        }\n        this._private__resizeInfo = {\n            _internal_startY: event.pageY,\n            _internal_prevStretchTopPane: this._private__topPane._internal_state()._internal_stretchFactor(),\n            _internal_maxPaneStretch: totalStretch - minPaneStretch,\n            _internal_totalStretch: totalStretch,\n            _internal_pixelStretchFactor: pixelStretchFactor,\n            _internal_minPaneStretch: minPaneStretch,\n        };\n        this._private__handle._internal_backgroundElement.style.display = 'block';\n    }\n    _private__pressedMouseMoveEvent(event) {\n        const resizeInfo = this._private__resizeInfo;\n        if (resizeInfo === null) {\n            return;\n        }\n        const deltaY = event.pageY - resizeInfo._internal_startY;\n        const deltaStretchFactor = deltaY * resizeInfo._internal_pixelStretchFactor;\n        const upperPaneNewStretch = clamp(resizeInfo._internal_prevStretchTopPane + deltaStretchFactor, resizeInfo._internal_minPaneStretch, resizeInfo._internal_maxPaneStretch);\n        this._private__topPane._internal_state()._internal_setStretchFactor(upperPaneNewStretch);\n        this._private__bottomPane._internal_state()._internal_setStretchFactor(resizeInfo._internal_totalStretch - upperPaneNewStretch);\n        this._private__chartWidget._internal_model()._internal_fullUpdate();\n    }\n    _private__mouseUpEvent(event) {\n        if (this._private__resizeInfo === null || this._private__handle === null) {\n            return;\n        }\n        this._private__resizeInfo = null;\n        this._private__handle._internal_backgroundElement.style.display = 'none';\n    }\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"19\" fill=\"none\"><g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path fill=\"var(--stroke)\" d=\"M2 0H0v10h6v9h21.4l.5-1.3 6-15 1-2.7H23.7l-.5 1.3-.2.6a5 5 0 0 0-7-.9V0H2Zm20 17h4l5.2-13 .8-2h-7l-1 2.5-.2.5-1.5 3.8-.3.7V17Zm-.8-10a3 3 0 0 0 .7-2.7A3 3 0 1 0 16.8 7h4.4ZM14 7V2H2v6h6v9h4V7h2Z\"/><path fill=\"var(--fill)\" d=\"M14 2H2v6h6v9h6V2Zm12 15h-7l6-15h7l-6 15Zm-7-9a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/></g><defs><clipPath id=\"a\"><path fill=\"var(--stroke)\" d=\"M0 0h35v19H0z\"/></clipPath></defs></svg>`;\nconst css = `a#tv-attr-logo{--fill:#131722;--stroke:#fff;position:absolute;left:10px;bottom:10px;height:19px;width:35px;margin:0;padding:0;border:0;z-index:3;}a#tv-attr-logo[data-dark]{--fill:#D1D4DC;--stroke:#131722;}`;\n// This widget doesn't support dynamically responding to options changes\n// because it is expected that the `attributionLogo` option won't be changed\n// and this saves some bundle size.\nclass AttributionLogoWidget {\n    constructor(container, chart) {\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n        this._private__theme = undefined;\n        this._private__visible = false;\n        this._private__container = container;\n        this._private__chart = chart;\n        this._private__render();\n    }\n    _internal_update() {\n        this._private__render();\n    }\n    _internal_removeElement() {\n        if (this._private__element) {\n            this._private__container.removeChild(this._private__element);\n        }\n        if (this._private__cssElement) {\n            this._private__container.removeChild(this._private__cssElement);\n        }\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n    }\n    _private__shouldUpdate() {\n        return this._private__visible !== this._private__shouldBeVisible() || this._private__theme !== this._private__themeToUse();\n    }\n    _private__themeToUse() {\n        return this._private__chart._internal_model()._internal_colorParser()._internal_colorStringToGrayscale(this._private__chart._internal_options()['layout'].textColor) > 160\n            ? 'dark'\n            : 'light';\n    }\n    _private__shouldBeVisible() {\n        return this._private__chart._internal_options()['layout'].attributionLogo;\n    }\n    _private__getUTMSource() {\n        const url = new URL(location.href);\n        if (!url.hostname) {\n            // ignore local testing\n            return '';\n        }\n        return '&utm_source=' + url.hostname + url.pathname;\n    }\n    _private__render() {\n        if (!this._private__shouldUpdate()) {\n            return;\n        }\n        this._internal_removeElement();\n        this._private__visible = this._private__shouldBeVisible();\n        if (this._private__visible) {\n            this._private__theme = this._private__themeToUse();\n            this._private__cssElement = document.createElement('style');\n            this._private__cssElement.innerText = css;\n            this._private__element = document.createElement('a');\n            this._private__element.href = `https://www.tradingview.com/?utm_medium=lwc-link&utm_campaign=lwc-chart${this._private__getUTMSource()}`;\n            this._private__element.title = 'Charting by TradingView';\n            this._private__element.id = 'tv-attr-logo';\n            this._private__element.target = '_blank';\n            this._private__element.innerHTML = svg;\n            this._private__element.toggleAttribute('data-dark', this._private__theme === 'dark');\n            this._private__container.appendChild(this._private__cssElement);\n            this._private__container.appendChild(this._private__element);\n        }\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: true,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\nfunction releaseCanvas(canvas) {\n    // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n    // Seems that iOS Safari stores canvas elements for some additional time internally.\n    // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n    // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.getContext('2d')?.clearRect(0, 0, 1, 1);\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourceViews(paneViewsGetter, drawRendererFn, source, pane) {\n    const views = paneViewsGetter(source, pane);\n    for (const view of views) {\n        const renderer = view._internal_renderer(pane);\n        if (renderer !== null) {\n            drawRendererFn(renderer);\n        }\n    }\n}\n\nfunction hasPriceScale(source) {\n    return source._internal_priceScale !== undefined;\n}\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n    return (source) => {\n        if (!hasPriceScale(source)) {\n            return [];\n        }\n        const psId = source._internal_priceScale()?._internal_id() ?? '';\n        if (psId !== priceScaleId) {\n            // exclude if source is using a different price scale.\n            return [];\n        }\n        return source._internal_pricePaneViews?.(zOrder) ?? [];\n    };\n}\nfunction recalculateOverlapping(views, direction, scaleHeight, rendererOptions) {\n    if (!views.length) {\n        return;\n    }\n    let currentGroupStart = 0;\n    const initLabelHeight = views[0]._internal_height(rendererOptions, true);\n    let spaceBeforeCurrentGroup = direction === 1\n        ? scaleHeight / 2 - (views[0]._internal_getFixedCoordinate() - initLabelHeight / 2)\n        : views[0]._internal_getFixedCoordinate() - initLabelHeight / 2 - scaleHeight / 2;\n    spaceBeforeCurrentGroup = Math.max(0, spaceBeforeCurrentGroup);\n    for (let i = 1; i < views.length; i++) {\n        const view = views[i];\n        const prev = views[i - 1];\n        const height = prev._internal_height(rendererOptions, false);\n        const coordinate = view._internal_getFixedCoordinate();\n        const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n        const overlap = direction === 1\n            ? coordinate > prevFixedCoordinate - height\n            : coordinate < prevFixedCoordinate + height;\n        if (overlap) {\n            const fixedCoordinate = prevFixedCoordinate - height * direction;\n            view._internal_setFixedCoordinate(fixedCoordinate);\n            const edgePoint = fixedCoordinate - direction * height / 2;\n            const outOfViewport = direction === 1 ? edgePoint < 0 : edgePoint > scaleHeight;\n            if (outOfViewport && spaceBeforeCurrentGroup > 0) {\n                // shift the whole group up or down\n                const desiredGroupShift = direction === 1 ? -1 - edgePoint : edgePoint - scaleHeight;\n                const possibleShift = Math.min(desiredGroupShift, spaceBeforeCurrentGroup);\n                for (let k = currentGroupStart; k < views.length; k++) {\n                    views[k]._internal_setFixedCoordinate(views[k]._internal_getFixedCoordinate() + direction * possibleShift);\n                }\n                spaceBeforeCurrentGroup -= possibleShift;\n            }\n        }\n        else {\n            currentGroupStart = i;\n            spaceBeforeCurrentGroup = direction === 1\n                ? prevFixedCoordinate - height - coordinate\n                : coordinate - (prevFixedCoordinate + height);\n        }\n    }\n}\nfunction priceScaleCrosshairLabelVisible(crosshair) {\n    return crosshair.mode !== 2 /* CrosshairMode.Hidden */ && crosshair.horzLine.visible && crosshair.horzLine.labelVisible;\n}\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options['layout'];\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n        this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n        this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => !this._private__options['handleScroll'].vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d', {\n            colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace,\n        }));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null &&\n            this._private__size !== null &&\n            priceScaleCrosshairLabelVisible(this._private__options.crosshair)) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        const canvasOptions = {\n            colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n                this._private__drawTickMarks(target);\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n            this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the price scale\n        this._private__priceScale?._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options['handleScale'].axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options()['handleScale'].axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = priceScaleOptions.textColor ?? this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        let center = this._private__size.height / 2;\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        // we can use any, but let's use the first source as \"center\" one\n        const centerSource = this._private__priceScale._internal_dataSources()[0];\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n                if (centerSource === source && sourceViews.length > 0) {\n                    center = sourceViews[0]._internal_coordinate();\n                }\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions, center);\n    }\n    _private__fixLabelOverlap(views, rendererOptions, center) {\n        if (this._private__size === null) {\n            return;\n        }\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        // share center label\n        if (top.length && bottom.length) {\n            bottom.push(top[0]);\n        }\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        recalculateOverlapping(top, 1, this._private__size.height, rendererOptions);\n        recalculateOverlapping(bottom, -1, this._private__size.height, rendererOptions);\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction sourceBottomPaneViews$1(source, pane) {\n    return source._internal_bottomPaneViews?.(pane) ?? [];\n}\nfunction sourcePaneViews$1(source, pane) {\n    return source._internal_paneViews?.(pane) ?? [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n    return source._internal_labelPaneViews?.(pane) ?? [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n    return source._internal_topPaneViews?.(pane) ?? [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__attributionLogoWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__attributionLogoWidget = null;\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n            this._private__state._internal_destroy();\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n        if (this._private__chart._internal_paneWidgets().indexOf(this) === this._private__chart._internal_paneWidgets().length - 1) {\n            this._private__attributionLogoWidget = this._private__attributionLogoWidget ?? new AttributionLogoWidget(this._private__paneCell, this._private__chart);\n            this._private__attributionLogoWidget._internal_update();\n        }\n        else {\n            this._private__attributionLogoWidget?._internal_removeElement();\n            this._private__attributionLogoWidget = null;\n        }\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_mouseDoubleClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n    }\n    _internal_doubleTapEvent(event) {\n        this._internal_mouseDoubleClickEvent(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options()['handleScale'].pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        const crosshair = this._private__model()._internal_crosshairSource();\n        if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        return hitTestPane(state, x, y);\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n        for (const primitive of pane._internal_primitives()) {\n            primitive._internal_updateAllViews();\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        const canvasOptions = {\n            colorSpace: this._private__chart._internal_options().layout.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawSources(target, sourceBottomPaneViews$1);\n                    this._private__drawGrid(target);\n                    this._private__drawSources(target, sourcePaneViews$1);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshair(topTarget);\n            this._private__drawSources(topTarget, sourceTopPaneViews$1);\n            this._private__drawSources(topTarget, sourceLabelPaneViews);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _internal_drawAdditionalSources(target, paneViewsGetter) {\n        this._private__drawSources(target, paneViewsGetter);\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        this._private__fireMouseClickDelegate(this._private__clicked, event);\n    }\n    _private__fireMouseClickDelegate(delegate, event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (delegate._internal_hasListeners()) {\n            delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer(state);\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        const panePrimitives = state._internal_primitives();\n        for (const panePrimitive of panePrimitives) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, panePrimitive);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const panePrimitive of panePrimitives) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, panePrimitive);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        const drawRendererFn = (renderer) => drawFn(renderer, target, isHovered, objecId);\n        drawSourceViews(paneViewsGetter, drawRendererFn, source, state);\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions['handleScroll'];\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, {\n            colorSpace: this._private__options.layout.colorSpace,\n        });\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction buildTimeAxisViewsGetter(zOrder) {\n    return (source) => source._internal_timePaneViews?.(zOrder) ?? [];\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n    constructor(chartWidget, horzScaleBehavior) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__options = chartWidget._internal_options()['layout'];\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options()['handleScroll'].horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options()['handleScale'].axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        const canvasOptions = {\n            colorSpace: this._private__options.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                    this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawAdditionalSources(target, sourcePaneViews);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n            this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n        }\n    }\n    _private__drawAdditionalSources(target, axisViewsGetter) {\n        const sources = this._private__chart._internal_model()._internal_serieses();\n        for (const source of sources) {\n            drawSourceViews(axisViewsGetter, (renderer) => drawBackground(renderer, target, false, undefined), source, undefined);\n        }\n        for (const source of sources) {\n            drawSourceViews(axisViewsGetter, (renderer) => drawForeground(renderer, target, false, undefined), source, undefined);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight < maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n            if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n                ctx.font = this._private__baseBoldFont();\n            }\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight >= maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options, horzScaleBehavior) {\n        this._private__paneWidgets = [];\n        this._private__paneSeparators = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__cursorStyleOverride = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.direction = 'ltr';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        for (const paneSeparator of this._private__paneSeparators) {\n            this._private__destroySeparator(paneSeparator);\n        }\n        this._private__paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__dblClicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        if (options['layout']?.panes) {\n            this._private__applyPanesOptions();\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === \"left\" /* DefaultPriceScaleId.Left */ && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === \"right\" /* DefaultPriceScaleId.Right */ && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === \"left\" /* DefaultPriceScaleId.Left */\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    _internal_element() {\n        return this._private__element;\n    }\n    _internal_setCursorStyle(style) {\n        this._private__cursorStyleOverride = style;\n        if (this._private__cursorStyleOverride) {\n            this._internal_element().style.setProperty('cursor', style);\n        }\n        else {\n            this._internal_element().style.removeProperty('cursor');\n        }\n    }\n    _internal_getCursorOverrideStyle() {\n        return this._private__cursorStyleOverride;\n    }\n    _internal_paneSize(paneIndex) {\n        return ensureDefined(this._private__paneWidgets[paneIndex])._internal_getSize();\n    }\n    _private__applyPanesOptions() {\n        this._private__paneSeparators.forEach((separator) => {\n            separator._internal_update();\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                if (paneIndex < this._private__paneWidgets.length - 1) {\n                    const separator = this._private__paneSeparators[paneIndex];\n                    const separatorBitmapSize = separator._internal_getBitmapSize();\n                    if (ctx !== null) {\n                        separator._internal_drawBitmap(ctx, targetX, targetY);\n                    }\n                    targetY += separatorBitmapSize.height;\n                }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            if (paneIndex < this._private__paneWidgets.length - 1) {\n                const separator = this._private__paneSeparators[paneIndex];\n                const separatorBitmapSize = separator._internal_getBitmapSize();\n                if (ctx !== null) {\n                    separator._internal_drawBitmap(ctx, totalWidth, totalHeight);\n                }\n                totalHeight += separatorBitmapSize.height;\n            }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        const separatorCount = this._private__paneSeparators.length;\n        const separatorHeight = 1 /* SeparatorConstants.SeparatorHeight */;\n        const separatorsHeight = separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        const pixelRatio = window.devicePixelRatio || 1;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = Math.ceil((totalPaneHeight - accumulatedHeight) * pixelRatio) / pixelRatio;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels * pixelRatio) / pixelRatio;\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options['handleScroll'].mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options['handleScale'].mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options['handleScale'].mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options['handleScroll'].mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (this._private__invalidateMask?._internal_fullInvalidation() === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    _private__destroySeparator(separator) {\n        this._private__tableElement.removeChild(separator._internal_getElement());\n        separator._internal_destroy();\n    }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            const paneSeparator = this._private__paneSeparators.pop();\n            if (paneSeparator !== undefined) {\n                this._private__destroySeparator(paneSeparator);\n            }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this, paneWidget), this);\n            paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this, paneWidget), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            if (i > 0) {\n                const paneSeparator = new PaneSeparator(this, i - 1, i);\n                this._private__paneSeparators.push(paneSeparator);\n                this._private__tableElement.insertBefore(paneSeparator._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n            }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event, pane) {\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)?.originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        const paneIndex = this._private__getPaneIndex(pane);\n        return {\n            _internal_originalTime: clientTime,\n            _internal_index: index ?? undefined,\n            _internal_point: point ?? undefined,\n            _internal_paneIndex: paneIndex !== -1 ? paneIndex : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event ?? undefined,\n        };\n    }\n    _private__getPaneIndex(pane) {\n        let paneIndex = -1;\n        if (pane) {\n            paneIndex = this._private__paneWidgets.indexOf(pane);\n        }\n        else {\n            const crosshairPane = this._internal_model()._internal_crosshairSource()._internal_pane();\n            if (crosshairPane !== null) {\n                paneIndex = this._internal_model()._internal_panes().indexOf(crosshairPane);\n            }\n        }\n        return paneIndex;\n    }\n    _private__onPaneWidgetClicked(pane, time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n    }\n    _private__onPaneWidgetDblClicked(pane, time, point, event) {\n        this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._internal_setCursorStyle(this._internal_model()._internal_hoveredSource()?._internal_cursorStyle ?? null);\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                // There is no need to check if entry.target === this._container since there is only\n                // a single element being observed.\n                // and we want to use the last entry (if multiple) because it would be most up to date\n                // (since the browser may batch multiple updates).\n                const containerEntry = entries[entries.length - 1];\n                if (!containerEntry) {\n                    // this may be undefined if the entries array was empty.\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n        this._private__observer = null;\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options['handleScroll'].mouseWheel || options['handleScale'].mouseWheel);\n}\n\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return isFulfilledBarData(data) || isFulfilledLineData(data);\n}\nfunction isFulfilledBarData(data) {\n    return data.open !== undefined;\n}\nfunction isFulfilledLineData(data) {\n    return data.value !== undefined;\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n    const values = ensureDefined(dataToPlotRow)(item);\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const last = values[values.length - 1];\n    const value = [last, max, min, last];\n    const { time: excludedTime, color, ...data } = item;\n    return { _internal_index: index, _internal_time: time, _internal_value: value, _internal_originalTime: originalTime, _internal_data: data, _internal_color: color };\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n    if (bar.customValues !== undefined) {\n        plotRow._internal_customValues = bar.customValues;\n    }\n    return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n    if (customIsWhitespace) {\n        return customIsWhitespace(bar);\n    }\n    return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n        if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n            return wrapCustomValues({ _internal_time: time, _internal_index: index, _internal_originalTime: originalTime }, bar);\n        }\n        return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n    };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n    const seriesPlotRowFnMap = {\n        Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n        Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n        Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n        Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n        Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Custom: wrapWhitespaceData(getCustomSeriesPlotRow),\n    };\n    return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n        _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time),\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n    const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n    const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_historicalUpdate: false,\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor(horzScaleBehavior) {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const originalTimes = data.map((d) => d.time);\n            const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n            const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n            seriesRows = data.map((item, index) => {\n                const time = timeConverter(item.time);\n                const horzItemKey = this._private__horzScaleBehavior.key(time);\n                let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    timeWeight: 0,\n                    time: pointData._internal_timePoint,\n                    pointData,\n                    originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data, historicalUpdate) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        // convertStringToBusinessDay(data);\n        this._private__horzScaleBehavior.preprocessData(data);\n        const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n        const time = timeConverter(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (!historicalUpdate && lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n        if (historicalUpdate && pointDataAtTime === undefined) {\n            throw new Error('Cannot update non-existing data point when historicalUpdate is true');\n        }\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        if (historicalUpdate) {\n            this._private__updateHistoricalSeriesRow(series, plotRow, pointDataAtTime._internal_index);\n        }\n        else {\n            this._private__updateLastSeriesRow(series, plotRow);\n        }\n        const info = {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow),\n            _internal_historicalUpdate: historicalUpdate,\n        };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            timeWeight: 0,\n            time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__updateHistoricalSeriesRow(series, plotRow, pointDataIndex) {\n        const seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            return;\n        }\n        // binary search for actual index in array.\n        const index = lowerBound(seriesData, pointDataIndex, (row, currentIndex) => row._internal_index < currentIndex);\n        if (isSeriesPlotRow(plotRow)) {\n            seriesData[index] = plotRow;\n        }\n        else {\n            seriesData.splice(index, 1);\n        }\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint.timeWeight = oldPoint.timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperBound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => ({\n            ...item,\n            ...this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time),\n        }));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass CustomSeriesPaneRendererWrapper {\n    constructor(sourceRenderer, priceScale) {\n        this._private__sourceRenderer = sourceRenderer;\n        this._private__priceScale = priceScale;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n    }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n    constructor(series, model, paneView) {\n        super(series, model, false);\n        this._private__paneView = paneView;\n        this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), (price) => {\n            const firstValue = series._internal_firstValue();\n            if (firstValue === null) {\n                return null;\n            }\n            return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n        });\n    }\n    _internal_priceValueBuilder(plotRow) {\n        return this._private__paneView.priceValueBuilder(plotRow);\n    }\n    _internal_isWhitespace(data) {\n        return this._private__paneView.isWhitespace(data);\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows()\n            .map((row) => {\n            return {\n                _internal_time: row._internal_index,\n                _internal_x: NaN,\n                ...colorer._internal_barStyle(row._internal_index),\n                _internal_originalData: row._internal_data,\n            };\n        });\n    }\n    _internal__convertToCoordinates(priceScale, timeScale) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__prepareRendererData() {\n        this._private__paneView.update({\n            bars: this._internal__items.map(unwrapItemData),\n            barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            visibleRange: this._internal__itemsVisibleRange,\n        }, this._internal__series._internal_options());\n    }\n}\nfunction unwrapItemData(item) {\n    return {\n        x: item._internal_x,\n        time: item._internal_time,\n        originalData: item._internal_originalData,\n        barColor: item._internal_barColor,\n    };\n}\n\nconst customStyleDefaults = {\n    color: '#2196f3',\n};\nconst createPaneView$6 = (series, model, customPaneView) => {\n    const paneView = ensure(customPaneView);\n    return new SeriesCustomPaneView(series, model, paneView);\n};\nconst createCustomSeriesDefinition = (paneView) => {\n    const definition = {\n        type: 'Custom',\n        isBuiltIn: false,\n        defaultOptions: { ...customStyleDefaults, ...paneView.defaultOptions() },\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$6,\n        _internal_customPaneView: paneView,\n    };\n    return definition;\n};\n\nconst isSeriesDefinition = (value) => {\n    return value._internal_createPaneView !== undefined;\n};\n\nfunction singleValueData(plotRow) {\n    const data = {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    const data = {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n    const seriesPlotRowToDataMap = {\n        Area: (areaData),\n        Line: (lineData),\n        Baseline: (baselineData),\n        Histogram: (lineData),\n        Bar: (barData),\n        Candlestick: (candlestickData),\n        Custom: (customData),\n    };\n    return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n    const time = plotRow._internal_originalTime;\n    return {\n        ...plotRow._internal_data,\n        time,\n    };\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n    panes: {\n        enableResize: true,\n        separatorColor: '#E0E3EB',\n        separatorHoverColor: 'rgba(178, 181, 189, 0.2)',\n    },\n    attributionLogo: true,\n    colorSpace: 'srgb',\n    colorParsers: [],\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n    minimumWidth: 0,\n    ensureEdgeTickMarksVisible: false,\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    maxBarSpacing: 0,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    allowShiftVisibleRangeOnWhitespaceReplacement: false,\n    ticksVisible: false,\n    uniformDistribution: false,\n    minimumHeight: 0,\n    allowBoldLabels: true,\n    ignoreWhitespaceIndices: false,\n};\n\nfunction chartOptionsDefaults() {\n    return {\n        addDefaultPane: true,\n        width: 0,\n        height: 0,\n        autoSize: false,\n        layout: layoutOptionsDefaults,\n        crosshair: crosshairOptionsDefaults,\n        grid: gridOptionsDefaults,\n        overlayPriceScales: {\n            ...priceScaleOptionsDefaults,\n        },\n        leftPriceScale: {\n            ...priceScaleOptionsDefaults,\n            visible: false,\n        },\n        rightPriceScale: {\n            ...priceScaleOptionsDefaults,\n            visible: true,\n        },\n        timeScale: timeScaleOptionsDefaults,\n        localization: {\n            locale: isRunningOnClientSide ? navigator.language : '',\n            dateFormat: 'dd MMM \\'yy',\n        },\n        handleScroll: {\n            mouseWheel: true,\n            pressedMouseMove: true,\n            horzTouchDrag: true,\n            vertTouchDrag: true,\n        },\n        handleScale: {\n            axisPressedMouseMove: {\n                time: true,\n                price: true,\n            },\n            axisDoubleClickReset: {\n                time: true,\n                price: true,\n            },\n            mouseWheel: true,\n            pinch: true,\n        },\n        kineticScroll: {\n            mouse: false,\n            touch: true,\n        },\n        trackingMode: {\n            exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n        },\n    };\n}\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId, paneIndex) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n        this._private__paneIndex = paneIndex ?? 0;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options, this._private__paneIndex);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    setVisibleRange(range) {\n        this.setAutoScale(false);\n        this._private__priceScale()._internal_setCustomPriceRange(new PriceRangeImpl(range.from, range.to));\n    }\n    getVisibleRange() {\n        const range = this._private__priceScale()._internal_priceRange();\n        return range === null ? null : {\n            from: range._internal_minValue(),\n            to: range._internal_maxValue(),\n        };\n    }\n    setAutoScale(on) {\n        this.applyOptions({ autoScale: on });\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId, this._private__paneIndex))._internal_priceScale;\n    }\n}\n\nclass PaneApi {\n    constructor(chartWidget, seriesApiGetter, pane, chartApi) {\n        this._private__chartWidget = chartWidget;\n        this._private__pane = pane;\n        this._private__seriesApiGetter = seriesApiGetter;\n        this._internal__chartApi = chartApi;\n    }\n    getHeight() {\n        return this._private__pane._internal_height();\n    }\n    setHeight(height) {\n        const chartModel = this._private__chartWidget._internal_model();\n        const paneIndex = chartModel._internal_getPaneIndex(this._private__pane);\n        chartModel._internal_changePanesHeight(paneIndex, height);\n    }\n    getStretchFactor() {\n        return this._private__pane._internal_stretchFactor();\n    }\n    setStretchFactor(stretchFactor) {\n        this._private__pane._internal_setStretchFactor(stretchFactor);\n        this._private__chartWidget._internal_model()._internal_fullUpdate();\n    }\n    paneIndex() {\n        return this._private__chartWidget._internal_model()._internal_getPaneIndex(this._private__pane);\n    }\n    moveTo(paneIndex) {\n        const currentIndex = this.paneIndex();\n        if (currentIndex === paneIndex) {\n            return;\n        }\n        assert(paneIndex >= 0 && paneIndex < this._private__chartWidget._internal_paneWidgets().length, 'Invalid pane index');\n        this._private__chartWidget._internal_model()._internal_movePane(currentIndex, paneIndex);\n    }\n    getSeries() {\n        return this._private__pane._internal_series().map((source) => this._private__seriesApiGetter(source)) ?? [];\n    }\n    getHTMLElement() {\n        const widgets = this._private__chartWidget._internal_paneWidgets();\n        if (!widgets || widgets.length === 0 || !widgets[this.paneIndex()]) {\n            return null;\n        }\n        return widgets[this.paneIndex()]._internal_getElement();\n    }\n    attachPrimitive(primitive) {\n        this._private__pane._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                requestUpdate: () => this._private__pane._internal_model()._internal_fullUpdate(),\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._private__pane._internal_detachPrimitive(primitive);\n    }\n    priceScale(priceScaleId) {\n        const priceScale = this._private__pane._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            throw new Error(`Cannot find price scale with id: ${priceScaleId}`);\n        }\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId, this.paneIndex());\n    }\n    setPreserveEmptyPane(preserve) {\n        this._private__pane._internal_setPreserveEmptyPane(preserve);\n    }\n    preserveEmptyPane() {\n        return this._private__pane._internal_preserveEmptyPane();\n    }\n    addCustomSeries(customPaneView, options = {}, paneIndex = 0) {\n        return this._internal__chartApi.addCustomSeries(customPaneView, options, paneIndex);\n    }\n    addSeries(definition, options = {}) {\n        return this._internal__chartApi.addSeries(definition, options, this.paneIndex());\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = bh.key(data[0].time);\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = bh.key(data[i].time);\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n        case 'Custom':\n            return checkCustomItem.bind(null);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledData(barItem)) {\n        return;\n    }\n    ['open', 'high', 'low', 'close'].forEach((key) => {\n        assert(typeof barItem[key] === 'number', `${type} series item data value of ${key} must be a number, got=${typeof barItem[key]}, value=${barItem[key]}`);\n        assert(isSafeValue(barItem[key]), `${type} series item data value of ${key} must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof barItem[key]}, value=${barItem[key]}`);\n    });\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledData(lineItem)) {\n        return;\n    }\n    assert(typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n    assert(isSafeValue(lineItem.value), `${type} series item data value must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n// type: 'Custom',\n// customItem: SeriesDataItemTypeMap[typeof type]\n) {\n    // Nothing to check yet...\n    return;\n}\nconst MIN_SAFE_VALUE = Number.MIN_SAFE_INTEGER / 100;\nconst MAX_SAFE_VALUE = Number.MAX_SAFE_INTEGER / 100;\nfunction isSafeValue(value) {\n    return value >= MIN_SAFE_VALUE && value <= MAX_SAFE_VALUE;\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior, paneApiGetter) {\n        this._private__dataChangedDelegate = new Delegate();\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._internal__chartApi = chartApi;\n        this._private__paneApiGetter = paneApiGetter;\n    }\n    _internal_destroy() {\n        this._private__dataChangedDelegate._internal_destroy();\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_originalTime;\n            result.to = dataLastBarInRange._internal_originalTime;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n        this._private__onDataChanged('full');\n    }\n    update(bar, historicalUpdate = false) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar, historicalUpdate);\n        this._private__onDataChanged('update');\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        const creator = getSeriesDataCreator(this.seriesType());\n        return creator(data);\n    }\n    data() {\n        const seriesCreator = getSeriesDataCreator(this.seriesType());\n        const rows = this._internal__series._internal_bars()._internal_rows();\n        return rows.map((row) => seriesCreator(row));\n    }\n    subscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id(), this.getPane().paneIndex());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    priceLines() {\n        return this._internal__series._internal_priceLines().map((priceLine) => new PriceLine(priceLine));\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n    attachPrimitive(primitive) {\n        // at this point we cast the generic to unknown because we\n        // don't want the model to know the types of the API (â—‘_â—‘)\n        this._internal__series._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                series: this,\n                requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n                horzScaleBehavior: this._private__horzScaleBehavior,\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._internal__series._internal_detachPrimitive(primitive);\n        if (primitive.detached) {\n            primitive.detached();\n        }\n        this._internal__series._internal_model()._internal_fullUpdate();\n    }\n    getPane() {\n        const series = this._internal__series;\n        const pane = ensureNotNull(this._internal__series._internal_model()._internal_paneForSource(series));\n        return this._private__paneApiGetter(pane);\n    }\n    moveToPane(paneIndex) {\n        this._internal__series._internal_model()._internal_moveSeriesToPane(this._internal__series, paneIndex);\n    }\n    seriesOrder() {\n        const pane = this._internal__series._internal_model()._internal_paneForSource(this._internal__series);\n        if (pane === null) {\n            return -1;\n        }\n        return pane._internal_series().indexOf(this._internal__series);\n    }\n    setSeriesOrder(order) {\n        const pane = this._internal__series._internal_model()._internal_paneForSource(this._internal__series);\n        if (pane === null) {\n            return;\n        }\n        pane._internal_setSeriesOrder(this._internal__series, order);\n    }\n    _private__onDataChanged(scope) {\n        if (this._private__dataChangedDelegate._internal_hasListeners()) {\n            this._private__dataChangedDelegate._internal_fire(scope);\n        }\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget, horzScaleBehavior) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: timeRange.from.originalTime,\n            to: timeRange.to.originalTime,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n            to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToIndex(time, findNearest) {\n        const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n        return this._private__timeScale._internal_timeToIndex(timePoint, findNearest);\n    }\n    timeToCoordinate(time) {\n        const timePointIndex = this.timeToIndex(time, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return timePoint.originalTime;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return {\n            ...clone(this._private__timeScale._internal_options()),\n            barSpacing: this._private__timeScale._internal_barSpacing(),\n        };\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options['handleScale'])) {\n        const handleScale = options['handleScale'];\n        options['handleScale'] = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options['handleScale'] !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options['handleScale'];\n        if (isBoolean(axisPressedMouseMove)) {\n            options['handleScale'].axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options['handleScale'].axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options['handleScroll'];\n    if (isBoolean(handleScroll)) {\n        options['handleScroll'] = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, horzScaleBehavior, options) {\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__dblClickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        this._private__panes = new WeakMap();\n        this._private__dataLayer = new DataLayer(horzScaleBehavior);\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults()) :\n            merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n        this._internal__horzScaleBehavior = horzScaleBehavior;\n        this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_dblClicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__dblClickedDelegate._internal_hasListeners()) {\n                this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._internal__horzScaleBehavior);\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__dblClickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addCustomSeries(customPaneView, options = {}, paneIndex = 0) {\n        const paneView = ensure(customPaneView);\n        const definition = createCustomSeriesDefinition(paneView);\n        return this._private__addSeriesImpl(definition, options, paneIndex);\n    }\n    addSeries(definition, options = {}, paneIndex = 0) {\n        return this._private__addSeriesImpl(definition, options, paneIndex);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data, historicalUpdate) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data, historicalUpdate));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId, paneIndex = 0) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId, paneIndex);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        {\n            const colorSpace = options.layout?.colorSpace;\n            if (colorSpace !== undefined && colorSpace !== this.options().layout.colorSpace) {\n                throw new Error(`colorSpace option should not be changed once the chart has been created.`);\n            }\n            const colorParsers = options.layout?.colorParsers;\n            if (colorParsers !== undefined && colorParsers !== this.options().layout.colorParsers) {\n                throw new Error(`colorParsers option should not be changed once the chart has been created.`);\n            }\n        }\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    addPane(preserveEmptyPane = false) {\n        const pane = this._private__chartWidget._internal_model()._internal_addPane();\n        pane._internal_setPreserveEmptyPane(preserveEmptyPane);\n        return this._private__getPaneApi(pane);\n    }\n    removePane(index) {\n        this._private__chartWidget._internal_model()._internal_removePane(index);\n    }\n    swapPanes(first, second) {\n        this._private__chartWidget._internal_model()._internal_swapPanes(first, second);\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    chartElement() {\n        return this._private__chartWidget._internal_element();\n    }\n    panes() {\n        return this._private__chartWidget._internal_model()._internal_panes().map((pane) => this._private__getPaneApi(pane));\n    }\n    paneSize(paneIndex = 0) {\n        const size = this._private__chartWidget._internal_paneSize(paneIndex);\n        return {\n            height: size.height,\n            width: size.width,\n        };\n    }\n    setCrosshairPosition(price, horizontalPosition, seriesApi) {\n        const series = this._private__seriesMap.get(seriesApi);\n        if (series === undefined) {\n            return;\n        }\n        const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n        if (pane === null) {\n            return;\n        }\n        this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n    }\n    clearCrosshairPosition() {\n        this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n    }\n    horzBehaviour() {\n        return this._internal__horzScaleBehavior;\n    }\n    _private__addSeriesImpl(definition, options = {}, paneIndex = 0) {\n        assert(isSeriesDefinition(definition));\n        patchPriceFormat(options.priceFormat);\n        if (definition.type === 'Candlestick') {\n            fillUpDownCandlesticksColors(options);\n        }\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(definition.defaultOptions), options);\n        const createPaneView = definition._internal_createPaneView;\n        const series = new Series(this._private__chartWidget._internal_model(), definition.type, strictOptions, createPaneView, definition._internal_customPaneView);\n        this._private__chartWidget._internal_model()._internal_addSeriesToPane(series, paneIndex);\n        const res = new SeriesApi(series, this, this, this, this._internal__horzScaleBehavior, (pane) => this._private__getPaneApi(pane));\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_timeScale()._internal_recalculateIndicesWithData();\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const seriesType = series._internal_seriesType();\n            const data = getSeriesDataCreator(seriesType)(plotRow);\n            if (seriesType !== 'Custom') {\n                assert(isFulfilledData(data));\n            }\n            else {\n                const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n                assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n            }\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ||\n            !this._private__seriesMapReversed.has(param._internal_hoveredSeries)\n            ? undefined\n            : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_originalTime,\n            logical: param._internal_index,\n            point: param._internal_point,\n            paneIndex: param._internal_paneIndex,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n    _private__getPaneApi(pane) {\n        let result = this._private__panes.get(pane);\n        if (!result) {\n            result = new PaneApi(this._private__chartWidget, (series) => this._private__mapSeriesToApi(series), pane, this);\n            this._private__panes.set(pane, result);\n        }\n        return result;\n    }\n}\n\nfunction fetchHtmlElement(container) {\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        return element;\n    }\n    return container;\n}\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n    const htmlElement = fetchHtmlElement(container);\n    const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n    horzScaleBehavior.setOptions(res.options());\n    return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n/**\n * Provides the default implementation of the horizontal scale (time-based) that can be used as a base for extending the horizontal scale with custom behavior.\n * This allows for the introduction of custom functionality without re-implementing the entire {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface.\n *\n * For further details, refer to the {@link createChartEx} chart constructor method.\n *\n * @returns An uninitialized class implementing the {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface\n */\nfunction defaultHorzScaleBehavior() {\n    return HorzScaleBehaviorTime;\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n    if (visibleRange.to - visibleRange.from <= 0) {\n        return;\n    }\n    const { horizontalPixelRatio, verticalPixelRatio, context } = renderingScope;\n    let prevStyle = null;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    const radius = pointMarkersRadius * verticalPixelRatio + correction;\n    for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = items[i];\n        if (point) {\n            const style = styleGetter(renderingScope, point);\n            if (style !== prevStyle) {\n                context.beginPath();\n                if (prevStyle !== null) {\n                    context.fill();\n                }\n                context.fillStyle = style;\n                prevStyle = style;\n            }\n            const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n            const centerY = point._internal_y * verticalPixelRatio;\n            context.moveTo(centerX, centerY);\n            context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        }\n    }\n    context.fill();\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n        ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n        finishStyledArea(renderingScope, currentStyle, item1, item2);\n    }\n    else {\n        const changeStyle = (newStyle, currentItem) => {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n            ctx.beginPath();\n            currentStyle = newStyle;\n            currentStyleFirstItem = currentItem;\n        };\n        let currentItem = currentStyleFirstItem;\n        ctx.beginPath();\n        ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n        for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n            currentItem = items[i];\n            const itemStyle = styleGetter(renderingScope, currentItem);\n            switch (lineType) {\n                case 0 /* LineType.Simple */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 1 /* LineType.WithSteps */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    if (itemStyle !== currentStyle) {\n                        changeStyle(itemStyle, currentItem);\n                        ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    }\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 2 /* LineType.Curved */: {\n                    const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                    ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                }\n            }\n            if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n                changeStyle(itemStyle, currentItem);\n                ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            }\n        }\n        if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n        }\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(scope, style) {\n    const ctx = scope.context;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_pointMarkersRadius: pointMarkersRadius } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        const styleGetter = this._internal__strokeStyle.bind(this);\n        if (lineType !== undefined) {\n            walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea$1);\n        }\n        if (pointMarkersRadius) {\n            drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n        }\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_lineWidth: options.lineWidth,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$5 = (series, model) => new SeriesLinePaneView(series, model);\nconst createLineSeries = () => {\n    const definition = {\n        type: 'Line',\n        isBuiltIn: true,\n        defaultOptions: lineStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$5,\n    };\n    return definition;\n};\nconst lineSeries = createLineSeries();\n\nfunction createDebouncedMicroTaskHandler(callback) {\n    let scheduled = false;\n    return function (...args) {\n        if (!scheduled) {\n            scheduled = true;\n            queueMicrotask(() => {\n                callback(...args);\n                scheduled = false;\n            });\n        }\n    };\n}\nfunction markWithGreaterWeight$1(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nfunction toInternalHorzScaleItem(item) {\n    return item;\n}\nfunction fromInternalHorzScaleItem(item) {\n    return item;\n}\nclass YieldCurveHorzScaleBehavior {\n    constructor() {\n        this._private__pointsChangedDelegate = new Delegate();\n        this._private__invalidateWhitespace = createDebouncedMicroTaskHandler(() => this._private__pointsChangedDelegate._internal_fire(this._private__largestIndex));\n        this._private__largestIndex = 0;\n    }\n    /** Data changes might require that the whitespace be generated again */\n    _internal_whitespaceInvalidated() {\n        return this._private__pointsChangedDelegate;\n    }\n    _internal_destroy() {\n        this._private__pointsChangedDelegate._internal_destroy();\n    }\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n    }\n    preprocessData(data) {\n        // No preprocessing needed for yield curve data\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        this._private__options.localization = options;\n    }\n    createConverterToInternalObj(data) {\n        this._private__invalidateWhitespace();\n        return (time) => {\n            if (time > this._private__largestIndex) {\n                this._private__largestIndex = time;\n            }\n            return toInternalHorzScaleItem(time);\n        };\n    }\n    key(internalItem) {\n        return internalItem;\n    }\n    cacheKey(internalItem) {\n        return fromInternalHorzScaleItem(internalItem);\n    }\n    convertHorzItemToInternal(item) {\n        return toInternalHorzScaleItem(item);\n    }\n    formatHorzItem(item) {\n        return this._private__formatTime(item);\n    }\n    formatTickmark(item) {\n        return this._private__formatTime(item.time);\n    }\n    maxTickMarkWeight(marks) {\n        return marks.reduce(markWithGreaterWeight$1, marks[0]).weight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        const timeWeight = (time) => {\n            if (time % 120 === 0) {\n                return 10;\n            }\n            if (time % 60 === 0) {\n                return 9;\n            }\n            if (time % 36 === 0) {\n                return 8;\n            }\n            if (time % 12 === 0) {\n                return 7;\n            }\n            if (time % 6 === 0) {\n                return 6;\n            }\n            if (time % 3 === 0) {\n                return 5;\n            }\n            if (time % 1 === 0) {\n                return 4;\n            }\n            return 0;\n        };\n        for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n            sortedTimePoints[index].timeWeight = timeWeight(fromInternalHorzScaleItem(sortedTimePoints[index].time));\n        }\n        this._private__largestIndex = fromInternalHorzScaleItem(sortedTimePoints[sortedTimePoints.length - 1].time);\n        this._private__invalidateWhitespace();\n    }\n    _private__formatTime(months) {\n        if (this._private__options.localization?.timeFormatter) {\n            return this._private__options.localization.timeFormatter(months);\n        }\n        if (months < 12) {\n            return `${months}M`;\n        }\n        const years = Math.floor(months / 12);\n        const remainingMonths = months % 12;\n        if (remainingMonths === 0) {\n            return `${years}Y`;\n        }\n        return `${years}Y${remainingMonths}M`;\n    }\n}\n\nconst yieldChartOptionsDefaults = {\n    baseResolution: 1,\n    minimumTimeRange: 120,\n    startTimeRange: 0,\n};\n\nfunction generateWhitespaceData({ _internal_start: start, _internal_end: end, _internal_resolution: resolution, }) {\n    return Array.from({ length: Math.floor((end - start) / resolution) + 1 }, \n    // eslint-disable-next-line quote-props\n    (item, i) => ({ 'time': start + i * resolution }));\n}\nfunction buildWhitespaceState(options, lastIndex) {\n    return {\n        _internal_start: Math.max(0, options.startTimeRange),\n        _internal_end: Math.max(0, options.minimumTimeRange, lastIndex || 0),\n        _internal_resolution: Math.max(1, options.baseResolution),\n    };\n}\nconst generateWhitespaceHash = ({ _internal_start: start, _internal_end: end, _internal_resolution: resolution, }) => `${start}~${end}~${resolution}`;\nconst defaultOptions = {\n    yieldCurve: yieldChartOptionsDefaults,\n    // and add sensible default options for yield charts which\n    // are different from the usual defaults.\n    timeScale: {\n        ignoreWhitespaceIndices: true,\n    },\n    leftPriceScale: {\n        visible: true,\n    },\n    rightPriceScale: {\n        visible: false,\n    },\n    localization: {\n        priceFormatter: (value) => {\n            return value.toFixed(3) + '%';\n        },\n    },\n};\nconst lineStyleDefaultOptionOverrides = {\n    lastValueVisible: false,\n    priceLineVisible: false,\n};\nclass YieldChartApi extends ChartApi {\n    constructor(container, options) {\n        const fullOptions = merge(defaultOptions, options || {});\n        const horzBehaviour = new YieldCurveHorzScaleBehavior();\n        super(container, horzBehaviour, fullOptions);\n        horzBehaviour.setOptions(this.options());\n        this._initWhitespaceSeries();\n    }\n    addSeries(definition, options = {}, paneIndex = 0) {\n        if (definition.isBuiltIn && ['Area', 'Line'].includes(definition.type) === false) {\n            throw new Error('Yield curve only support Area and Line series');\n        }\n        const optionOverrides = {\n            ...lineStyleDefaultOptionOverrides,\n            ...options,\n        };\n        return super.addSeries(definition, optionOverrides, paneIndex);\n    }\n    _initWhitespaceSeries() {\n        const horzBehaviour = this.horzBehaviour();\n        const whiteSpaceSeries = this.addSeries(lineSeries);\n        let currentWhitespaceHash;\n        function updateWhitespace(lastIndex) {\n            const newWhitespaceState = buildWhitespaceState(horzBehaviour.options().yieldCurve, lastIndex);\n            const newWhitespaceHash = generateWhitespaceHash(newWhitespaceState);\n            if (newWhitespaceHash !== currentWhitespaceHash) {\n                currentWhitespaceHash = newWhitespaceHash;\n                whiteSpaceSeries.setData(generateWhitespaceData(newWhitespaceState));\n            }\n        }\n        updateWhitespace(0);\n        horzBehaviour._internal_whitespaceInvalidated()._internal_subscribe(updateWhitespace);\n    }\n}\n\n/**\n * Creates a yield curve chart with the specified options.\n *\n * A yield curve chart differs from the default chart type\n * in the following ways:\n * - Horizontal scale is linearly spaced, and defined in monthly\n * time duration units\n * - Whitespace is ignored for the crosshair and grid lines\n *\n * @param container - ID of HTML element or element itself\n * @param options - The yield chart options.\n * @returns An interface to the created chart\n */\nfunction createYieldCurveChart(container, options) {\n    const htmlElement = fetchHtmlElement(container);\n    const chartApi = new YieldChartApi(htmlElement, options);\n    return chartApi;\n}\n\nfunction markWithGreaterWeight(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass HorzScaleBehaviorPrice {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n    }\n    preprocessData(data) { }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        this._private__options.localization = options;\n    }\n    createConverterToInternalObj(data) {\n        return (price) => price;\n    }\n    key(internalItem) {\n        return internalItem;\n    }\n    cacheKey(internalItem) {\n        return internalItem;\n    }\n    convertHorzItemToInternal(item) {\n        return item;\n    }\n    formatHorzItem(item) {\n        return item.toFixed(this._private__precision());\n    }\n    formatTickmark(item, localizationOptions) {\n        return item.time.toFixed(this._private__precision());\n    }\n    maxTickMarkWeight(marks) {\n        return marks.reduce(markWithGreaterWeight, marks[0]).weight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        const priceWeight = (price) => {\n            if (price === Math.ceil(price / 100) * 100) {\n                return 8;\n            }\n            if (price === Math.ceil(price / 50) * 50) {\n                return 7;\n            }\n            if (price === Math.ceil(price / 25) * 25) {\n                return 6;\n            }\n            if (price === Math.ceil(price / 10) * 10) {\n                return 5;\n            }\n            if (price === Math.ceil(price / 5) * 5) {\n                return 4;\n            }\n            if (price === Math.ceil(price)) {\n                return 3;\n            }\n            if (price * 2 === Math.ceil(price * 2)) {\n                return 1;\n            }\n            return 0;\n        };\n        for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n            sortedTimePoints[index].timeWeight = priceWeight(sortedTimePoints[index].time);\n        }\n    }\n    _private__precision() {\n        return this._private__options.localization\n            .precision;\n    }\n}\n\n/**\n * Creates an 'options' chart with price values on the horizontal scale.\n *\n * This function is used to create a specialized chart type where the horizontal scale\n * represents price values instead of time. It's particularly useful for visualizing\n * option chains, price distributions, or any data where price is the primary x-axis metric.\n *\n * @param container - The DOM element or its id where the chart will be rendered.\n * @param options - Optional configuration options for the price chart.\n * @returns An instance of IChartApiBase configured for price-based horizontal scaling.\n */\nfunction createOptionsChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorPrice(), options);\n}\n\nfunction finishStyledArea(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n    const { context, horizontalPixelRatio, verticalPixelRatio } = scope;\n    context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.closePath();\n    context.fillStyle = style;\n    context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = this._internal__data._internal_baseLevelCoordinate ??\n            (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea.bind(null, baseLevelCoordinate));\n    }\n}\n\nclass GradientStyleCache {\n    // eslint-disable-next-line complexity\n    _internal_get(scope, params) {\n        const cachedParams = this._private__params;\n        const { _internal_topColor1: topColor1, _internal_topColor2: topColor2, _internal_bottomColor1: bottomColor1, _internal_bottomColor2: bottomColor2, _internal_baseLevelCoordinate: baseLevelCoordinate, _internal_topCoordinate: topCoordinate, _internal_bottomCoordinate: bottomCoordinate, } = params;\n        if (this._private__cachedValue === undefined ||\n            cachedParams === undefined ||\n            cachedParams._internal_topColor1 !== topColor1 ||\n            cachedParams._internal_topColor2 !== topColor2 ||\n            cachedParams._internal_bottomColor1 !== bottomColor1 ||\n            cachedParams._internal_bottomColor2 !== bottomColor2 ||\n            cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate ||\n            cachedParams._internal_topCoordinate !== topCoordinate ||\n            cachedParams._internal_bottomCoordinate !== bottomCoordinate) {\n            const { verticalPixelRatio } = scope;\n            const multiplier = baseLevelCoordinate || topCoordinate > 0 ? verticalPixelRatio : 1;\n            const top = topCoordinate * multiplier;\n            const bottom = bottomCoordinate === scope.bitmapSize.height ? bottomCoordinate : bottomCoordinate * multiplier;\n            const baseline = (baseLevelCoordinate ?? 0) * multiplier;\n            const gradient = scope.context.createLinearGradient(0, top, 0, bottom);\n            gradient.addColorStop(0, topColor1);\n            if (baseLevelCoordinate !== null && baseLevelCoordinate !== undefined) {\n                const range = bottom - top;\n                const baselineRatio = clamp(((baseline - top) / range), 0, 1);\n                gradient.addColorStop(baselineRatio, topColor2);\n                gradient.addColorStop(baselineRatio, bottomColor1);\n            }\n            gradient.addColorStop(1, bottomColor2);\n            this._private__cachedValue = gradient;\n            this._private__params = params;\n        }\n        return this._private__cachedValue;\n    }\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topFillColor1,\n            _internal_topColor2: item._internal_topFillColor2,\n            _internal_bottomColor1: item._internal_bottomFillColor1,\n            _internal_bottomColor2: item._internal_bottomFillColor2,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n            _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = new GradientStyleCache();\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__strokeCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topLineColor,\n            _internal_topColor2: item._internal_topLineColor,\n            _internal_bottomColor1: item._internal_bottomLineColor,\n            _internal_bottomColor2: item._internal_bottomLineColor,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n            _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const options = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n            return;\n        }\n        let topCoordinate;\n        let bottomCoordinate;\n        if (options.relativeGradient) {\n            topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            bottomCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n                const item = this._internal__items[i];\n                if (item._internal_y < topCoordinate) {\n                    topCoordinate = item._internal_y;\n                }\n                if (item._internal_y > bottomCoordinate) {\n                    bottomCoordinate = item._internal_y;\n                }\n            }\n        }\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_topCoordinate: topCoordinate,\n            _internal_bottomCoordinate: bottomCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_topCoordinate: topCoordinate,\n            _internal_bottomCoordinate: bottomCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    relativeGradient: false,\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$4 = (series, model) => new SeriesBaselinePaneView(series, model);\nconst createSeries$4 = () => {\n    const definition = {\n        type: 'Baseline',\n        isBuiltIn: true,\n        defaultOptions: baselineStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$4,\n    };\n    return definition;\n};\nconst baselineSeries = createSeries$4();\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topColor,\n            _internal_topColor2: '',\n            _internal_bottomColor1: '',\n            _internal_bottomColor2: item._internal_bottomColor,\n            _internal_topCoordinate: this._internal__data?._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n            return;\n        }\n        let topCoordinate;\n        if (options.relativeGradient) {\n            topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n                const item = this._internal__items[i];\n                if (item._internal_y < topCoordinate) {\n                    topCoordinate = item._internal_y;\n                }\n            }\n        }\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: options.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_topCoordinate: topCoordinate,\n            _internal_invertFilledArea: options.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n        });\n    }\n}\n\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    relativeGradient: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$3 = (series, model) => new SeriesAreaPaneView(series, model);\nconst createSeries$3 = () => {\n    const definition = {\n        type: 'Area',\n        isBuiltIn: true,\n        defaultOptions: areaStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$3,\n    };\n    return definition;\n};\nconst areaSeries = createSeries$3();\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return {\n            ...this._internal__createDefaultItem(time, bar, colorer),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst createPaneView$2 = (series, model) => new SeriesBarsPaneView(series, model);\nconst createSeries$2 = () => {\n    const definition = {\n        type: 'Bar',\n        isBuiltIn: true,\n        defaultOptions: barStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$2,\n    };\n    return definition;\n};\nconst barSeries = createSeries$2();\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return {\n            ...this._internal__createDefaultItem(time, bar, colorer),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst createPaneView$1 = (series, model) => new SeriesCandlesticksPaneView(series, model);\nconst createSeries$1 = () => {\n    const definition = {\n        type: 'Candlestick',\n        isBuiltIn: true,\n        defaultOptions: candlestickStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$1,\n    };\n    return definition;\n};\nconst candlestickSeries = createSeries$1();\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst createPaneView = (series, model) => new SeriesHistogramPaneView(series, model);\nconst createSeries = () => {\n    const definition = {\n        type: 'Histogram',\n        isBuiltIn: true,\n        defaultOptions: histogramStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView,\n    };\n    return definition;\n};\nconst histogramSeries = createSeries();\n\nclass PanePrimitiveWrapper {\n    constructor(pane, primitive) {\n        this._private__pane = pane;\n        this._private__primitive = primitive;\n        this._private__attach();\n    }\n    detach() {\n        this._private__pane.detachPrimitive(this._private__primitive);\n    }\n    getPane() {\n        return this._private__pane;\n    }\n    applyOptions(options) {\n        this._private__primitive._internal_applyOptions?.(options);\n    }\n    _private__attach() {\n        this._private__pane.attachPrimitive(this._private__primitive);\n    }\n}\n\nconst textWatermarkOptionsDefaults = {\n    visible: true,\n    horzAlign: 'center',\n    vertAlign: 'center',\n    lines: [],\n};\nconst textWatermarkLineOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n};\n\nclass TextWatermarkRenderer {\n    constructor(options) {\n        this._private__metricsCache = new Map();\n        this._private__data = options;\n    }\n    draw(target) {\n        target.useMediaCoordinateSpace((scope) => {\n            if (!this._private__data.visible) {\n                return;\n            }\n            const { context: ctx, mediaSize } = scope;\n            let textHeight = 0;\n            for (const line of this._private__data.lines) {\n                if (line.text.length === 0) {\n                    continue;\n                }\n                ctx.font = line._internal_font;\n                const textWidth = this._private__metrics(ctx, line.text);\n                if (textWidth > mediaSize.width) {\n                    line._internal_zoom = mediaSize.width / textWidth;\n                }\n                else {\n                    line._internal_zoom = 1;\n                }\n                textHeight += line.lineHeight * line._internal_zoom;\n            }\n            let vertOffset = 0;\n            switch (this._private__data.vertAlign) {\n                case 'top':\n                    vertOffset = 0;\n                    break;\n                case 'center':\n                    vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                    break;\n                case 'bottom':\n                    vertOffset = Math.max(mediaSize.height - textHeight, 0);\n                    break;\n            }\n            for (const line of this._private__data.lines) {\n                ctx.save();\n                ctx.fillStyle = line.color;\n                let horzOffset = 0;\n                switch (this._private__data.horzAlign) {\n                    case 'left':\n                        ctx.textAlign = 'left';\n                        horzOffset = line.lineHeight / 2;\n                        break;\n                    case 'center':\n                        ctx.textAlign = 'center';\n                        horzOffset = mediaSize.width / 2;\n                        break;\n                    case 'right':\n                        ctx.textAlign = 'right';\n                        horzOffset = mediaSize.width - 1 - line.lineHeight / 2;\n                        break;\n                }\n                ctx.translate(horzOffset, vertOffset);\n                ctx.textBaseline = 'top';\n                ctx.font = line._internal_font;\n                ctx.scale(line._internal_zoom, line._internal_zoom);\n                ctx.fillText(line.text, 0, line._internal_vertOffset);\n                ctx.restore();\n                vertOffset += line.lineHeight * line._internal_zoom;\n            }\n        });\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass TextWatermarkPaneView {\n    constructor(options) {\n        this._private__options = buildRendererOptions$1(options);\n    }\n    _internal_update(options) {\n        this._private__options = buildRendererOptions$1(options);\n    }\n    renderer() {\n        return new TextWatermarkRenderer(this._private__options);\n    }\n}\nfunction buildRendererLineOptions(lineOption) {\n    return {\n        ...lineOption,\n        _internal_font: makeFont(lineOption.fontSize, lineOption.fontFamily, lineOption.fontStyle),\n        lineHeight: lineOption.lineHeight || lineOption.fontSize * 1.2,\n        _internal_vertOffset: 0,\n        _internal_zoom: 0,\n    };\n}\nfunction buildRendererOptions$1(options) {\n    return {\n        ...options,\n        lines: options.lines.map(buildRendererLineOptions),\n    };\n}\n\nfunction mergeLineOptionsWithDefaults(options) {\n    return {\n        ...textWatermarkLineOptionsDefaults,\n        ...options,\n    };\n}\nfunction mergeOptionsWithDefaults$2(options) {\n    return {\n        ...textWatermarkOptionsDefaults,\n        ...options,\n        lines: options.lines?.map(mergeLineOptionsWithDefaults) ?? [],\n    };\n}\nclass TextWatermark {\n    constructor(options) {\n        this._private__options = mergeOptionsWithDefaults$2(options);\n        this._private__paneViews = [new TextWatermarkPaneView(this._private__options)];\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update(this._private__options));\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    attached({ requestUpdate }) {\n        this._internal_requestUpdate = requestUpdate;\n    }\n    detached() {\n        this._internal_requestUpdate = undefined;\n    }\n    _internal_applyOptions(options) {\n        this._private__options = mergeOptionsWithDefaults$2({ ...this._private__options, ...options });\n        if (this._internal_requestUpdate) {\n            this._internal_requestUpdate();\n        }\n    }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createTextWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const textWatermark = createTextWatermark(firstPane, {\n * \t  horzAlign: 'center',\n * \t  vertAlign: 'center',\n * \t  lines: [\n * \t    {\n * \t      text: 'Hello',\n * \t      color: 'rgba(255,0,0,0.5)',\n * \t      fontSize: 100,\n * \t      fontStyle: 'bold',\n * \t    },\n * \t    {\n * \t      text: 'This is a text watermark',\n * \t      color: 'rgba(0,0,255,0.5)',\n * \t      fontSize: 50,\n * \t      fontStyle: 'italic',\n * \t      fontFamily: 'monospace',\n * \t    },\n * \t  ],\n * });\n * // to change options\n * textWatermark.applyOptions({ horzAlign: 'left' });\n * // to remove watermark from the pane\n * textWatermark.detach();\n * ```\n */\nfunction createTextWatermark(pane, options) {\n    return new PanePrimitiveWrapper(pane, new TextWatermark(options));\n}\n\nconst imageWatermarkOptionsDefaults = {\n    alpha: 1,\n    padding: 0,\n};\n\nclass ImageWatermarkRenderer {\n    constructor(data) {\n        this._private__data = data;\n    }\n    draw(target) {\n        target.useMediaCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            const pos = this._private__determinePlacement(this._private__data, scope.mediaSize);\n            if (!pos || !this._private__data._internal_imgElement) {\n                return;\n            }\n            ctx.globalAlpha = this._private__data.alpha ?? 1;\n            ctx.drawImage(this._private__data._internal_imgElement, pos._internal_x, pos._internal_y, pos._internal_width, pos._internal_height);\n        });\n    }\n    _private__determinePlacement(data, paneSize) {\n        const { maxHeight, maxWidth, _internal_imgHeight: imgHeight, _internal_imgWidth: imgWidth, padding } = data;\n        const plotCentreX = Math.round(paneSize.width / 2);\n        const plotCentreY = Math.round(paneSize.height / 2);\n        const paddingSize = padding ?? 0;\n        let availableWidth = paneSize.width - 2 * paddingSize;\n        let availableHeight = paneSize.height - 2 * paddingSize;\n        if (maxHeight) {\n            availableHeight = Math.min(availableHeight, maxHeight);\n        }\n        if (maxWidth) {\n            availableWidth = Math.min(availableWidth, maxWidth);\n        }\n        const scaleX = availableWidth / imgWidth;\n        const scaleY = availableHeight / imgHeight;\n        const scaleToUse = Math.min(scaleX, scaleY);\n        const drawWidth = imgWidth * scaleToUse;\n        const drawHeight = imgHeight * scaleToUse;\n        const x = plotCentreX - 0.5 * drawWidth;\n        const y = plotCentreY - 0.5 * drawHeight;\n        return {\n            _internal_x: x,\n            _internal_y: y,\n            _internal_height: drawHeight,\n            _internal_width: drawWidth,\n        };\n    }\n}\n\nclass ImageWatermarkPaneView {\n    constructor(options) {\n        this._private__image = null;\n        this._private__imageWidth = 0; // don't draw until loaded\n        this._private__imageHeight = 0;\n        this._private__options = options;\n        this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n    }\n    _internal_stateUpdate(state) {\n        if (state._internal_imageWidth !== undefined) {\n            this._private__imageWidth = state._internal_imageWidth;\n        }\n        if (state._internal_imageHeight !== undefined) {\n            this._private__imageHeight = state._internal_imageHeight;\n        }\n        if (state._internal_image !== undefined) {\n            this._private__image = state._internal_image;\n        }\n        this._internal_update();\n    }\n    _internal_optionsUpdate(options) {\n        this._private__options = options;\n        this._internal_update();\n    }\n    zOrder() {\n        return 'bottom';\n    }\n    _internal_update() {\n        this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n    }\n    renderer() {\n        return new ImageWatermarkRenderer(this._private__rendererOptions);\n    }\n}\nfunction buildRendererOptions(options, imgElement, imgWidth, imgHeight) {\n    return {\n        ...options,\n        _internal_imgElement: imgElement,\n        _internal_imgWidth: imgWidth,\n        _internal_imgHeight: imgHeight,\n    };\n}\n\nfunction mergeOptionsWithDefaults$1(options) {\n    return {\n        ...imageWatermarkOptionsDefaults,\n        ...options,\n    };\n}\nclass ImageWatermark {\n    constructor(imageUrl, options) {\n        this._private__imgElement = null;\n        this._private__imageUrl = imageUrl;\n        this._private__options = mergeOptionsWithDefaults$1(options);\n        this._private__paneViews = [new ImageWatermarkPaneView(this._private__options)];\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update());\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    attached(attachedParams) {\n        const { requestUpdate } = attachedParams;\n        this._private__requestUpdate = requestUpdate;\n        this._private__imgElement = new Image();\n        this._private__imgElement.onload = () => {\n            const imageHeight = this._private__imgElement?.naturalHeight ?? 1;\n            const imageWidth = this._private__imgElement?.naturalWidth ?? 1;\n            this._private__paneViews.forEach((pv) => pv._internal_stateUpdate({\n                _internal_imageHeight: imageHeight,\n                _internal_imageWidth: imageWidth,\n                _internal_image: this._private__imgElement,\n            }));\n            if (this._private__requestUpdate) {\n                this._private__requestUpdate();\n            }\n        };\n        this._private__imgElement.src = this._private__imageUrl;\n    }\n    detached() {\n        this._private__requestUpdate = undefined;\n        this._private__imgElement = null;\n    }\n    _internal_applyOptions(options) {\n        this._private__options = mergeOptionsWithDefaults$1({ ...this._private__options, ...options });\n        this._private__updateOptions();\n        if (this._internal_requestUpdate) {\n            this._internal_requestUpdate();\n        }\n    }\n    _internal_requestUpdate() {\n        if (this._private__requestUpdate) {\n            this._private__requestUpdate();\n        }\n    }\n    _private__updateOptions() {\n        this._private__paneViews.forEach((pw) => pw._internal_optionsUpdate(this._private__options));\n    }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param imageUrl - Image URL.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createImageWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const imageWatermark = createImageWatermark(firstPane, '/images/my-image.png', {\n *   alpha: 0.5,\n *   padding: 20,\n * });\n * // to change options\n * imageWatermark.applyOptions({ padding: 10 });\n * // to remove watermark from the pane\n * imageWatermark.detach();\n * ```\n */\nfunction createImageWatermark(pane, imageUrl, options) {\n    return new PanePrimitiveWrapper(pane, new ImageWatermark(imageUrl, options));\n}\n\nclass SeriesPrimitiveAdapter {\n    constructor(series, primitive) {\n        this._internal__series = series;\n        this._internal__primitive = primitive;\n        this._private__attach();\n    }\n    detach() {\n        this._internal__series.detachPrimitive(this._internal__primitive);\n    }\n    getSeries() {\n        return this._internal__series;\n    }\n    applyOptions(options) {\n        if (this._internal__primitive && this._internal__primitive._internal_applyOptions) {\n            this._internal__primitive._internal_applyOptions(options);\n        }\n    }\n    _private__attach() {\n        this._internal__series.attachPrimitive(this._internal__primitive);\n    }\n}\n\nconst seriesMarkerOptionsDefaults = {\n    zOrder: 'normal',\n};\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n    if (hasSide) {\n        return margin;\n    }\n    else if (hasInBar) {\n        return Math.ceil(margin / 2);\n    }\n    return 0;\n}\n\nfunction drawArrow(up, ctx, coords, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = ((arrowSize - 1) / 2) * coords._internal_pixelRatio;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = ((baseSize - 1) / 2) * coords._internal_pixelRatio;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    else {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = (arrowSize - 1) / 2;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = (baseSize - 1) / 2;\n    const triangleTolerance = 3;\n    const rectTolerance = 2;\n    const baseLeft = centerX - halfBaseSize - rectTolerance;\n    const baseRight = centerX + halfBaseSize + rectTolerance;\n    const baseTop = up ? centerY : centerY - halfArrowSize;\n    const baseBottom = up ? centerY + halfArrowSize : centerY;\n    if (x >= baseLeft && x <= baseRight &&\n        y >= baseTop - rectTolerance && y <= baseBottom + rectTolerance) {\n        return true;\n    }\n    const isInTriangleBounds = () => {\n        const headLeft = centerX - halfArrowSize - triangleTolerance;\n        const headRight = centerX + halfArrowSize + triangleTolerance;\n        const headTop = up ? centerY - halfArrowSize - triangleTolerance : centerY;\n        const headBottom = up ? centerY : centerY + halfArrowSize + triangleTolerance;\n        if (x < headLeft || x > headRight ||\n            y < headTop || y > headBottom) {\n            return false;\n        }\n        const dx = Math.abs(x - centerX);\n        const dy = up\n            ? Math.abs(y - centerY) // up arrow\n            : Math.abs(y - centerY); // down arrow\n        return dy + triangleTolerance >= dx / 2;\n    };\n    return isInTriangleBounds();\n}\n\nfunction drawCircle(ctx, coords, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawSquare(ctx, coords, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = ((squareSize - 1) * coords._internal_pixelRatio) / 2;\n    const left = coords._internal_x - halfSize;\n    const top = coords._internal_y - halfSize;\n    ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.save();\n    ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer {\n    constructor() {\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n        this._private__zOrder = 'normal';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily, zOrder) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__zOrder = zOrder;\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item && hitTestItem(item, x, y)) {\n                return {\n                    zOrder: 'normal',\n                    externalId: item._internal_externalId ?? '',\n                };\n            }\n        }\n        return null;\n    }\n    draw(target) {\n        if (this._private__zOrder === 'aboveSeries') {\n            return;\n        }\n        target.useBitmapCoordinateSpace((scope) => {\n            this._internal__drawImpl(scope);\n        });\n    }\n    drawBackground(target) {\n        if (this._private__zOrder !== 'aboveSeries') {\n            return;\n        }\n        target.useBitmapCoordinateSpace((scope) => {\n            this._internal__drawImpl(scope);\n        });\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const item = this._private__data._internal_items[index];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n        }\n    }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    return {\n        _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n        _internal_y: item._internal_y * verticalPixelRatio,\n        _internal_pixelRatio: horizontalPixelRatio,\n    };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n    }\n    drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, coordinates, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, coordinates, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, coordinates, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, coordinates, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\nfunction isPriceMarker(position) {\n    return position === 'atPriceTop' || position === 'atPriceBottom' || position === 'atPriceMiddle';\n}\nfunction getPrice(seriesData, marker) {\n    if (isPriceMarker(marker.position) && marker.price !== undefined) {\n        return marker.price;\n    }\n    if (isValueData(seriesData)) {\n        return seriesData.value;\n    }\n    if (isOhlcData(seriesData)) {\n        if (marker.position === 'inBar') {\n            return seriesData.close;\n        }\n        if (marker.position === 'aboveBar') {\n            return seriesData.high;\n        }\n        if (marker.position === 'belowBar') {\n            return seriesData.low;\n        }\n    }\n    return;\n}\n// eslint-disable-next-line max-params, complexity\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, series, chart) {\n    const price = getPrice(seriesData, marker);\n    if (price === undefined) {\n        return;\n    }\n    const ignoreOffset = isPriceMarker(marker.position);\n    const timeScale = chart.timeScale();\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale.options().barSpacing) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    const position = marker.position;\n    switch (position) {\n        case 'inBar':\n        case 'atPriceMiddle': {\n            rendererItem._internal_y = ensureNotNull(series.priceToCoordinate(price));\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar':\n        case 'atPriceTop': {\n            const offset = ignoreOffset ? 0 : offsets._internal_aboveBar;\n            rendererItem._internal_y = (ensureNotNull(series.priceToCoordinate(price)) - halfSize - offset);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            if (!ignoreOffset) {\n                offsets._internal_aboveBar += shapeSize + shapeMargin;\n            }\n            return;\n        }\n        case 'belowBar':\n        case 'atPriceBottom': {\n            const offset = ignoreOffset ? 0 : offsets._internal_belowBar;\n            rendererItem._internal_y = (ensureNotNull(series.priceToCoordinate(price)) + halfSize + offset);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = (rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */));\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            if (!ignoreOffset) {\n                offsets._internal_belowBar += shapeSize + shapeMargin;\n            }\n            return;\n        }\n    }\n}\nfunction isValueData(data) {\n    // eslint-disable-next-line no-restricted-syntax\n    return 'value' in data && typeof data.value === 'number';\n}\nfunction isOhlcData(data) {\n    // eslint-disable-next-line no-restricted-syntax\n    return 'open' in data && 'high' in data && 'low' in data && 'close' in data;\n}\nclass SeriesMarkersPaneView {\n    constructor(series, chart, options) {\n        this._private__markers = [];\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__chart = chart;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n        this._private__options = options;\n    }\n    renderer() {\n        if (!this._private__series.options().visible) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__chart.options()['layout'];\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily, this._private__options.zOrder);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_setMarkers(markers) {\n        this._private__markers = markers;\n        this._internal_update('data');\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n        }\n    }\n    _internal_updateOptions(options) {\n        this._private__invalidated = true;\n        this._private__options = options;\n    }\n    zOrder() {\n        return this._private__options.zOrder === 'aboveSeries' ? 'top' : this._private__options.zOrder;\n    }\n    _internal__makeValid() {\n        const timeScale = this._private__chart.timeScale();\n        const seriesMarkers = this._private__markers;\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_externalId: marker.id,\n                _internal_internalId: marker._internal_internalId,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__chart.options()['layout'];\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale.getVisibleLogicalRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const visibleBarsRange = new RangeImpl(Math.floor(visibleBars.from), Math.ceil(visibleBars.to));\n        const firstValue = this._private__series.data()[0];\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale.options().barSpacing);\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBarsRange, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = ensureNotNull(timeScale.logicalToCoordinate(marker.time));\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = this._private__series.dataByIndex(marker.time, 0 /* MismatchDirection.None */);\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, this._private__series, this._private__chart);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nfunction mergeOptionsWithDefaults(options) {\n    return {\n        ...seriesMarkerOptionsDefaults,\n        ...options,\n    };\n}\nclass SeriesMarkersPrimitive {\n    constructor(options) {\n        this._private__paneView = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__dataChangedHandler = null;\n        this._private__series = null;\n        this._private__chart = null;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__markersPositions = null;\n        this._private__cachedBarSpacing = null;\n        this._private__recalculationRequired = true;\n        this._private__options = mergeOptionsWithDefaults(options);\n    }\n    attached(param) {\n        this._private__recalculateMarkers();\n        this._private__chart = param.chart;\n        this._private__series = param.series;\n        this._private__paneView = new SeriesMarkersPaneView(this._private__series, ensureNotNull(this._private__chart), this._private__options);\n        this._private__requestUpdate = param.requestUpdate;\n        this._private__series.subscribeDataChanged((scope) => this._private__onDataChanged(scope));\n        this._private__recalculationRequired = true;\n        this._internal_requestUpdate();\n    }\n    _internal_requestUpdate() {\n        if (this._private__requestUpdate) {\n            this._private__requestUpdate();\n        }\n    }\n    detached() {\n        if (this._private__series && this._private__dataChangedHandler) {\n            this._private__series.unsubscribeDataChanged(this._private__dataChangedHandler);\n        }\n        this._private__chart = null;\n        this._private__series = null;\n        this._private__paneView = null;\n        this._private__dataChangedHandler = null;\n    }\n    _internal_setMarkers(markers) {\n        this._private__recalculationRequired = true;\n        this._private__markers = markers;\n        this._private__recalculateMarkers();\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__markersPositions = null;\n        this._internal_requestUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    paneViews() {\n        return this._private__paneView ? [this._private__paneView] : [];\n    }\n    updateAllViews() {\n        this._private__updateAllViews();\n    }\n    hitTest(x, y) {\n        if (this._private__paneView) {\n            return this._private__paneView.renderer()?._internal_hitTest(x, y) ?? null;\n        }\n        return null;\n    }\n    autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__paneView) {\n            const margins = this._private__getAutoScaleMargins();\n            if (margins) {\n                return {\n                    priceRange: null,\n                    margins: margins,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_applyOptions(options) {\n        this._private__options = mergeOptionsWithDefaults({ ...this._private__options, ...options });\n        if (this._internal_requestUpdate) {\n            this._internal_requestUpdate();\n        }\n    }\n    _private__getAutoScaleMargins() {\n        const chart = ensureNotNull(this._private__chart);\n        const barSpacing = chart.timeScale().options().barSpacing;\n        if (this._private__autoScaleMarginsInvalidated || barSpacing !== this._private__cachedBarSpacing) {\n            this._private__cachedBarSpacing = barSpacing;\n            if (this._private__markers.length > 0) {\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                const positions = this._private__getMarkerPositions();\n                this._private__autoScaleMargins = {\n                    above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n                    below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar),\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _private__getMarkerPositions() {\n        if (this._private__markersPositions === null) {\n            this._private__markersPositions = this._private__markers.reduce((acc, marker) => {\n                if (!acc[marker.position]) {\n                    acc[marker.position] = true;\n                }\n                return acc;\n            }, {\n                inBar: false,\n                aboveBar: false,\n                belowBar: false,\n                atPriceTop: false,\n                atPriceBottom: false,\n                atPriceMiddle: false,\n            });\n        }\n        return this._private__markersPositions;\n    }\n    _private__recalculateMarkers() {\n        if (!this._private__recalculationRequired || !this._private__chart || !this._private__series) {\n            return;\n        }\n        const timeScale = this._private__chart.timeScale();\n        const seriesData = this._private__series?.data();\n        if (timeScale.getVisibleLogicalRange() == null || !this._private__series || seriesData.length === 0) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const firstDataIndex = timeScale.timeToIndex(ensureNotNull(seriesData[0].time), true);\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            const timePointIndex = timeScale.timeToIndex(marker.time, true);\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataByIndex = ensureNotNull(this._private__series).dataByIndex(timePointIndex, searchMode);\n            const finalIndex = timeScale.timeToIndex(ensureNotNull(seriesDataByIndex).time, false);\n            // You must explicitly define the types so that the minification build processes the field names correctly\n            const baseMarker = {\n                time: finalIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                _internal_internalId: index,\n                text: marker.text,\n                size: marker.size,\n                price: marker.price,\n                _internal_originalTime: marker.time,\n            };\n            if (marker.position === 'atPriceTop' ||\n                marker.position === 'atPriceBottom' ||\n                marker.position === 'atPriceMiddle') {\n                if (marker.price === undefined) {\n                    throw new Error(`Price is required for position ${marker.position}`);\n                }\n                return {\n                    ...baseMarker,\n                    position: marker.position, // TypeScript knows this is SeriesMarkerPricePosition\n                    price: marker.price,\n                };\n            }\n            else {\n                return {\n                    ...baseMarker,\n                    position: marker.position, // TypeScript knows this is SeriesMarkerBarPosition\n                    price: marker.price, // Optional for bar positions\n                };\n            }\n        });\n        this._private__recalculationRequired = false;\n    }\n    _private__updateAllViews(updateType) {\n        if (this._private__paneView) {\n            this._private__recalculateMarkers();\n            this._private__paneView._internal_setMarkers(this._private__indexedMarkers);\n            this._private__paneView._internal_updateOptions(this._private__options);\n            this._private__paneView._internal_update(updateType);\n        }\n    }\n    _private__onDataChanged(scope) {\n        this._private__recalculationRequired = true;\n        this._internal_requestUpdate();\n    }\n}\n\nclass SeriesMarkersPrimitiveWrapper extends SeriesPrimitiveAdapter {\n    constructor(series, primitive, markers) {\n        super(series, primitive);\n        if (markers) {\n            this.setMarkers(markers);\n        }\n    }\n    setMarkers(markers) {\n        this._internal__primitive._internal_setMarkers(markers);\n    }\n    markers() {\n        return this._internal__primitive._internal_markers();\n    }\n}\n/**\n * A function to create a series markers primitive.\n *\n * @param series - The series to which the primitive will be attached.\n *\n * @param markers - An array of markers to be displayed on the series.\n *\n * @param options - Options for the series markers plugin.\n *\n * @example\n * ```js\n * import { createSeriesMarkers } from 'lightweight-charts';\n *\n *\tconst seriesMarkers = createSeriesMarkers(\n *\t\tseries,\n *\t\t[\n *\t\t\t{\n *\t\t\t\tcolor: 'green',\n *\t\t\t\tposition: 'inBar',\n * \t\t\t\tshape: 'arrowDown',\n *\t\t\t\ttime: 1556880900,\n *\t\t\t},\n *\t\t]\n *\t);\n *  // and then you can modify the markers\n *  // set it to empty array to remove all markers\n *  seriesMarkers.setMarkers([]);\n *\n *  // `seriesMarkers.markers()` returns current markers\n * ```\n */\nfunction createSeriesMarkers(series, markers, options) {\n    const wrapper = new SeriesMarkersPrimitiveWrapper(series, new SeriesMarkersPrimitive(options ?? {}));\n    if (markers) {\n        wrapper.setMarkers(markers);\n    }\n    return wrapper;\n}\n\nclass ExpiringMarkerManager {\n    constructor(updateCallback) {\n        this._private__markers = new Map();\n        this._private__updateCallback = updateCallback;\n    }\n    _internal_setMarker(marker, key, timeout) {\n        this._internal_clearMarker(key);\n        if (timeout !== undefined) {\n            const timeoutId = window.setTimeout(() => {\n                this._private__markers.delete(key);\n                this._private__triggerUpdate();\n            }, timeout);\n            const markerWithTimeout = {\n                ...marker,\n                _internal_timeoutId: timeoutId,\n                _internal_expiresAt: Date.now() + timeout,\n            };\n            this._private__markers.set(key, markerWithTimeout);\n        }\n        else {\n            // For markers without timeout, we set timeoutId and expiresAt to undefined\n            this._private__markers.set(key, {\n                ...marker,\n                _internal_timeoutId: undefined,\n                _internal_expiresAt: undefined,\n            });\n        }\n        this._private__triggerUpdate();\n    }\n    _internal_clearMarker(key) {\n        const marker = this._private__markers.get(key);\n        if (marker && marker._internal_timeoutId !== undefined) {\n            window.clearTimeout(marker._internal_timeoutId);\n        }\n        this._private__markers.delete(key);\n        this._private__triggerUpdate();\n    }\n    _internal_clearAllMarkers() {\n        for (const [point] of this._private__markers) {\n            this._internal_clearMarker(point);\n        }\n    }\n    _internal_getMarkers() {\n        const now = Date.now();\n        const activeMarkers = [];\n        for (const [time, marker] of this._private__markers) {\n            if (!marker._internal_expiresAt || marker._internal_expiresAt > now) {\n                activeMarkers.push({ time: marker.time, sign: marker.sign, value: marker.value });\n            }\n            else {\n                this._internal_clearMarker(time);\n            }\n        }\n        return activeMarkers;\n    }\n    _internal_setUpdateCallback(callback) {\n        this._private__updateCallback = callback;\n    }\n    _private__triggerUpdate() {\n        if (this._private__updateCallback) {\n            this._private__updateCallback();\n        }\n    }\n}\n\nconst upDownMarkersPluginOptionDefaults = {\n    positiveColor: '#22AB94',\n    negativeColor: '#F7525F',\n    updateVisibilityDuration: 5000,\n};\n\nclass MarkersPrimitiveRenderer {\n    constructor(data, neutralColor, negativeColor, positiveColor) {\n        this._private__data = data;\n        this._private__neutralColor = neutralColor;\n        this._private__negativeColor = negativeColor;\n        this._private__positiveColor = positiveColor;\n    }\n    draw(target) {\n        target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            const tickWidth = Math.max(1, Math.floor(scope.horizontalPixelRatio));\n            const correction = (tickWidth % 2) / 2;\n            const rad = 4 /* Constants.Radius */ * scope.verticalPixelRatio + correction;\n            this._private__data.forEach((item) => {\n                const centreX = Math.round(item._internal_x * scope.horizontalPixelRatio) + correction;\n                ctx.beginPath();\n                const color = this._private__getColor(item._internal_sign);\n                ctx.fillStyle = color;\n                ctx.arc(centreX, item._internal_y * scope.verticalPixelRatio, rad, 0, 2 * Math.PI, false);\n                ctx.fill();\n                if (item._internal_sign) {\n                    ctx.strokeStyle = color;\n                    ctx.lineWidth = Math.floor(2 /* Constants.ArrowLineWidth */ * scope.horizontalPixelRatio);\n                    ctx.beginPath();\n                    ctx.moveTo((item._internal_x - 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) *\n                        scope.verticalPixelRatio);\n                    ctx.lineTo(item._internal_x * scope.horizontalPixelRatio + correction, (item._internal_y -\n                        7 /* Constants.ArrowOffset */ * item._internal_sign -\n                        7 /* Constants.ArrowOffset */ * item._internal_sign * 0.5 /* Constants.VerticalScale */) *\n                        scope.verticalPixelRatio);\n                    ctx.lineTo((item._internal_x + 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) *\n                        scope.verticalPixelRatio);\n                    ctx.stroke();\n                }\n            });\n        });\n    }\n    _private__getColor(sign) {\n        if (sign === 0) {\n            return this._private__neutralColor;\n        }\n        return sign > 0 ? this._private__positiveColor : this._private__negativeColor;\n    }\n}\n\nfunction isAreaStyleOptions(opts, seriesType) {\n    return seriesType === 'Area';\n}\nfunction getNeutralColor(opts, seriesType) {\n    if (isAreaStyleOptions(opts, seriesType)) {\n        return opts.lineColor;\n    }\n    return opts.color;\n}\nclass MarkersPrimitivePaneView {\n    constructor(series, timeScale, options) {\n        this._private__data = [];\n        this._private__series = series;\n        this._private__timeScale = timeScale;\n        this._private__options = options;\n    }\n    _internal_update(markers) {\n        this._private__data = markers.map((marker) => {\n            const y = this._private__series.priceToCoordinate(marker.value);\n            if (y === null) {\n                return null;\n            }\n            const x = ensureNotNull(this._private__timeScale.timeToCoordinate(marker.time));\n            return {\n                _internal_x: x,\n                _internal_y: y,\n                _internal_sign: marker.sign,\n            };\n        })\n            .filter(notNull);\n    }\n    renderer() {\n        const options = this._private__series.options();\n        const seriesType = this._private__series.seriesType();\n        const neutralColor = getNeutralColor(options, seriesType);\n        return new MarkersPrimitiveRenderer(this._private__data, neutralColor, this._private__options.negativeColor, this._private__options.positiveColor);\n    }\n}\n\nfunction isLineData(item, type) {\n    return type === 'Line' || type === 'Area';\n}\nclass UpDownMarkersPrimitive {\n    constructor(options) {\n        this._private__chart = undefined;\n        this._private__series = undefined;\n        this._private__paneViews = [];\n        this._private__horzScaleBehavior = null;\n        this._private__managedDataPoints = new Map();\n        this._private__markersManager = new ExpiringMarkerManager(() => this._internal_requestUpdate());\n        this._private__options = {\n            ...upDownMarkersPluginOptionDefaults,\n            ...options,\n        };\n    }\n    _internal_applyOptions(options) {\n        this._private__options = {\n            ...this._private__options,\n            ...options,\n        };\n        this._internal_requestUpdate();\n    }\n    _internal_setMarkers(markers) {\n        this._private__markersManager._internal_clearAllMarkers();\n        const horzBehaviour = this._private__horzScaleBehavior;\n        if (!horzBehaviour) {\n            return;\n        }\n        markers.forEach((marker) => {\n            this._private__markersManager._internal_setMarker(marker, horzBehaviour.key(marker.time));\n        });\n    }\n    _internal_markers() {\n        return this._private__markersManager._internal_getMarkers();\n    }\n    _internal_requestUpdate() {\n        this._private__requestUpdate?.();\n    }\n    attached(params) {\n        const { chart, series, requestUpdate, horzScaleBehavior, } = params;\n        this._private__chart = chart;\n        this._private__series = series;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        const seriesType = this._private__series.seriesType();\n        if (seriesType !== 'Area' && seriesType !== 'Line') {\n            throw new Error('UpDownMarkersPrimitive is only supported for Area and Line series types');\n        }\n        this._private__paneViews = [\n            new MarkersPrimitivePaneView(this._private__series, this._private__chart.timeScale(), this._private__options),\n        ];\n        this._private__requestUpdate = requestUpdate;\n        this._internal_requestUpdate();\n    }\n    detached() {\n        this._private__chart = undefined;\n        this._private__series = undefined;\n        this._private__requestUpdate = undefined;\n    }\n    _internal_chart() {\n        return ensureDefined(this._private__chart);\n    }\n    _internal_series() {\n        return ensureDefined(this._private__series);\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update(this._internal_markers()));\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    _internal_setData(data) {\n        if (!this._private__series) {\n            throw new Error('Primitive not attached to series');\n        }\n        const seriesType = this._private__series.seriesType();\n        this._private__managedDataPoints.clear();\n        const horzBehaviour = this._private__horzScaleBehavior;\n        if (horzBehaviour) {\n            data.forEach((d) => {\n                if (isFulfilledData(d) && isLineData(d, seriesType)) {\n                    this._private__managedDataPoints.set(horzBehaviour.key(d.time), d.value);\n                }\n            });\n        }\n        ensureDefined(this._private__series).setData(data);\n    }\n    _internal_update(data, historicalUpdate) {\n        if (!this._private__series || !this._private__horzScaleBehavior) {\n            throw new Error('Primitive not attached to series');\n        }\n        const seriesType = this._private__series.seriesType();\n        const horzKey = this._private__horzScaleBehavior.key(data.time);\n        if (isWhitespaceData(data)) {\n            this._private__managedDataPoints.delete(horzKey);\n        }\n        if (isFulfilledData(data) && isLineData(data, seriesType)) {\n            const existingPrice = this._private__managedDataPoints.get(horzKey);\n            if (existingPrice) {\n                this._private__markersManager._internal_setMarker({\n                    time: data.time,\n                    value: data.value,\n                    sign: getSign(data.value, existingPrice),\n                }, horzKey, this._private__options.updateVisibilityDuration);\n            }\n        }\n        ensureDefined(this._private__series).update(data, historicalUpdate);\n    }\n    _internal_clearMarkers() {\n        this._private__markersManager._internal_clearAllMarkers();\n    }\n}\nfunction getSign(newValue, oldValue) {\n    if (newValue === oldValue) {\n        return 0;\n    }\n    return newValue - oldValue > 0 ? 1 : -1;\n}\n\nclass SeriesUpDownMarkerPrimitiveWrapper extends SeriesPrimitiveAdapter {\n    setData(data) {\n        return this._internal__primitive._internal_setData(data);\n    }\n    update(data, historicalUpdate) {\n        return this._internal__primitive._internal_update(data, historicalUpdate);\n    }\n    markers() {\n        return this._internal__primitive._internal_markers();\n    }\n    setMarkers(markers) {\n        return this._internal__primitive._internal_setMarkers(markers);\n    }\n    clearMarkers() {\n        return this._internal__primitive._internal_clearMarkers();\n    }\n}\n/**\n * Creates and attaches the Series Up Down Markers Plugin.\n *\n * @param series - Series to which attach the Up Down Markers Plugin\n * @param options - options for the Up Down Markers Plugin\n *\n * @returns Api for Series Up Down Marker Plugin. {@link ISeriesUpDownMarkerPluginApi}\n *\n * @example\n * ```js\n * import { createUpDownMarkers, createChart, LineSeries } from 'lightweight-charts';\n *\n * const chart = createChart('container');\n * const lineSeries = chart.addSeries(LineSeries);\n * const upDownMarkers = createUpDownMarkers(lineSeries, {\n *     positiveColor: '#22AB94',\n *     negativeColor: '#F7525F',\n *     updateVisibilityDuration: 5000,\n * });\n * // to add some data\n * upDownMarkers.setData(\n *     [\n *         { time: '2020-02-02', value: 12.34 },\n *         //... more line series data\n *     ]\n * );\n * // ... Update some values\n * upDownMarkers.update({ time: '2020-02-02', value: 13.54 }, true);\n * // to remove plugin from the series\n * upDownMarkers.detach();\n * ```\n */\nfunction createUpDownMarkers(series, options = {}) {\n    const wrapper = new SeriesUpDownMarkerPrimitiveWrapper(series, new UpDownMarkersPrimitive(options));\n    return wrapper;\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = {\n    ...seriesOptionsDefaults,\n    ...customStyleDefaults$1,\n};\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"5.0.8\";\n}\n\nexport { areaSeries as AreaSeries, barSeries as BarSeries, baselineSeries as BaselineSeries, candlestickSeries as CandlestickSeries, ColorType, CrosshairMode, histogramSeries as HistogramSeries, LastPriceAnimationMode, lineSeries as LineSeries, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, createImageWatermark, createOptionsChart, createSeriesMarkers, createTextWatermark, createUpDownMarkers, createYieldCurveChart, customSeriesDefaultOptions, defaultHorzScaleBehavior, isBusinessDay, isUTCTimestamp, version };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}