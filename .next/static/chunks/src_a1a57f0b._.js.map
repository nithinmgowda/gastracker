{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/lib/store.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport { GasStore } from './types'\r\n\r\nconst DEFAULT_GAS_STATE = {\r\n  currentGas: { baseFee: 0, priorityFee: 0, timestamp: Date.now() },\r\n  history: []\r\n}\r\n\r\nexport const useGasStore = create<GasStore>((set) => ({\r\n  mode: 'live',\r\n  chains: {\r\n    ethereum: DEFAULT_GAS_STATE,\r\n    polygon: DEFAULT_GAS_STATE,\r\n    arbitrum: DEFAULT_GAS_STATE\r\n  },\r\n  ethUsdPrice: 0,\r\n  transactionValue: 0,\r\n\r\n  setMode: (mode) => set({ mode }),\r\n  \r\n  updateGasPrice: (chainId, price) => set((state) => ({\r\n    chains: {\r\n      ...state.chains,\r\n      [chainId]: {\r\n        currentGas: price,\r\n        history: [...state.chains[chainId].history, {\r\n          timestamp: price.timestamp,\r\n          open: price.baseFee + price.priorityFee,\r\n          high: price.baseFee + price.priorityFee,\r\n          low: price.baseFee + price.priorityFee,\r\n          close: price.baseFee + price.priorityFee\r\n        }].slice(-60) // Keep last 60 points (15 minutes at 15s intervals)\r\n      }\r\n    }\r\n  })),\r\n\r\n  updateEthPrice: (price) => set({ ethUsdPrice: price }),\r\n  setTransactionValue: (value) => set({ transactionValue: value })\r\n}))"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,oBAAoB;IACxB,YAAY;QAAE,SAAS;QAAG,aAAa;QAAG,WAAW,KAAK,GAAG;IAAG;IAChE,SAAS,EAAE;AACb;AAEO,MAAM,cAAc,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAY,CAAC,MAAQ,CAAC;QACpD,MAAM;QACN,QAAQ;YACN,UAAU;YACV,SAAS;YACT,UAAU;QACZ;QACA,aAAa;QACb,kBAAkB;QAElB,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAE9B,gBAAgB,CAAC,SAAS,QAAU,IAAI,CAAC,QAAU,CAAC;oBAClD,QAAQ;wBACN,GAAG,MAAM,MAAM;wBACf,CAAC,QAAQ,EAAE;4BACT,YAAY;4BACZ,SAAS;mCAAI,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO;gCAAE;oCAC1C,WAAW,MAAM,SAAS;oCAC1B,MAAM,MAAM,OAAO,GAAG,MAAM,WAAW;oCACvC,MAAM,MAAM,OAAO,GAAG,MAAM,WAAW;oCACvC,KAAK,MAAM,OAAO,GAAG,MAAM,WAAW;oCACtC,OAAO,MAAM,OAAO,GAAG,MAAM,WAAW;gCAC1C;6BAAE,CAAC,KAAK,CAAC,CAAC,IAAI,oDAAoD;wBACpE;oBACF;gBACF,CAAC;QAED,gBAAgB,CAAC,QAAU,IAAI;gBAAE,aAAa;YAAM;QACpD,qBAAqB,CAAC,QAAU,IAAI;gBAAE,kBAAkB;YAAM;IAChE,CAAC","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/components/GasWidget.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { useGasStore } from \"../lib/store\";\r\nimport type { ChainId } from \"../lib/types\";\r\n\r\nconst CHAIN_COLORS: Record<ChainId, string> = {\r\n  ethereum: \"#627EEA\",\r\n  polygon: \"#8247E5\",\r\n  arbitrum: \"#28A0F0\"\r\n};\r\n\r\ninterface GasWidgetProps {\r\n  chain: ChainId;\r\n}\r\n\r\nexport const GasWidget: React.FC<GasWidgetProps> = ({ chain }) => {\r\n  const chainState = useGasStore((state) => state.chains[chain]);\r\n  const ethUsdPrice = useGasStore((state) => state.ethUsdPrice);\r\n\r\n  const isLoading = !chainState || !chainState.currentGas || ethUsdPrice === 0;\r\n  const { baseFee = 0, priorityFee = 0 } = chainState?.currentGas || {};\r\n  const totalGas = baseFee + priorityFee;\r\n  const gasLimit = 21000;\r\n  const gasCostInEth = (totalGas * gasLimit) / 1e9;\r\n  const gasCostInUsd = gasCostInEth * ethUsdPrice;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-gray-800 border border-blue-700 rounded-xl shadow-lg p-5 flex flex-col items-start transition-all duration-300 hover:scale-[1.02] min-h-[120px]\"\r\n      style={{ boxShadow: `0 2px 16px 0 ${CHAIN_COLORS[chain]}22` }}\r\n    >\r\n      <div className=\"flex items-center gap-2 mb-2\">\r\n        <span className=\"w-3 h-3 rounded-full\" style={{ background: CHAIN_COLORS[chain] }}></span>\r\n        <span className=\"text-lg font-bold capitalize tracking-wide\" style={{ color: CHAIN_COLORS[chain] }}>{chain}</span>\r\n        {isLoading && <span className=\"ml-2 animate-pulse text-blue-400\">‚óè</span>}\r\n      </div>\r\n      {isLoading ? (\r\n        <div className=\"flex items-center gap-2 text-gray-400 animate-pulse\">\r\n          <span className=\"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"></span>\r\n          <span>Loading gas data‚Ä¶</span>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"text-sm\">‚õΩ Base Fee: <span className=\"font-mono\">{baseFee.toFixed(2)} Gwei</span></div>\r\n          <div className=\"text-sm\">‚ö° Priority Fee: <span className=\"font-mono\">{priorityFee.toFixed(2)} Gwei</span></div>\r\n          <div className=\"text-sm font-bold text-green-400\">üí∏ Est. Cost: ${gasCostInUsd.toFixed(4)}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAGA;;;AAHA;;AAMA,MAAM,eAAwC;IAC5C,UAAU;IACV,SAAS;IACT,UAAU;AACZ;AAMO,MAAM,YAAsC;QAAC,EAAE,KAAK,EAAE;;IAC3D,MAAM,aAAa,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;6CAAE,CAAC,QAAU,MAAM,MAAM,CAAC,MAAM;;IAC7D,MAAM,cAAc,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;8CAAE,CAAC,QAAU,MAAM,WAAW;;IAE5D,MAAM,YAAY,CAAC,cAAc,CAAC,WAAW,UAAU,IAAI,gBAAgB;IAC3E,MAAM,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,GAAG,CAAA,uBAAA,iCAAA,WAAY,UAAU,KAAI,CAAC;IACpE,MAAM,WAAW,UAAU;IAC3B,MAAM,WAAW;IACjB,MAAM,eAAe,AAAC,WAAW,WAAY;IAC7C,MAAM,eAAe,eAAe;IAEpC,qBACE,6LAAC;QACC,WAAU;QACV,OAAO;YAAE,WAAW,AAAC,gBAAmC,OAApB,YAAY,CAAC,MAAM,EAAC;QAAI;;0BAE5D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;wBAAuB,OAAO;4BAAE,YAAY,YAAY,CAAC,MAAM;wBAAC;;;;;;kCAChF,6LAAC;wBAAK,WAAU;wBAA6C,OAAO;4BAAE,OAAO,YAAY,CAAC,MAAM;wBAAC;kCAAI;;;;;;oBACpG,2BAAa,6LAAC;wBAAK,WAAU;kCAAmC;;;;;;;;;;;;YAElE,0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;;;;;kCAChB,6LAAC;kCAAK;;;;;;;;;;;yEAGR;;kCACE,6LAAC;wBAAI,WAAU;;4BAAU;0CAAY,6LAAC;gCAAK,WAAU;;oCAAa,QAAQ,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCACrF,6LAAC;wBAAI,WAAU;;4BAAU;0CAAgB,6LAAC;gCAAK,WAAU;;oCAAa,YAAY,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAC7F,6LAAC;wBAAI,WAAU;;4BAAmC;4BAAgB,aAAa,OAAO,CAAC;;;;;;;;;;;;;;;AAKjG;GAnCa;;QACQ,sHAAA,CAAA,cAAW;QACV,sHAAA,CAAA,cAAW;;;KAFpB","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/components/WalletSimulator.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useGasStore } from \"../lib/store\";\r\n\r\nexport const WalletSimulator: React.FC = () => {\r\n  const [amount, setAmount] = useState<number>(0.5); // Transaction value in ETH/MATIC/etc.\r\n  const ethUsdPrice = useGasStore((state) => state.ethUsdPrice); // ETH/USD price\r\n  const chains = useGasStore((state) => state.chains); // gas data from all chains\r\n\r\n  const isLoading = ethUsdPrice === 0;\r\n\r\n  // Calculate USD cost of sending a transaction\r\n  const calculateUsdCost = (baseFee: number, priorityFee: number) => {\r\n    const gasLimit = 21000; // typical gas for ETH transfer\r\n    const totalFeeInGwei = baseFee + priorityFee;\r\n    const totalFeeInEth = (totalFeeInGwei * gasLimit) / 1e9; // Convert from Gwei to ETH\r\n    return totalFeeInEth * ethUsdPrice;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 border border-blue-700 rounded-xl shadow-lg p-6 fade-in transition-all duration-300 hover:scale-[1.01]\">\r\n      <h2 className=\"text-lg font-bold mb-4 text-blue-300 flex items-center gap-2\">\r\n        <span className=\"inline-block w-5 h-5 bg-blue-500 rounded-full mr-1\" />\r\n        Transaction Simulator\r\n      </h2>\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <label className=\"text-sm\">Transaction Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(parseFloat(e.target.value) || 0)}\r\n          className=\"border px-2 py-1 w-24 text-sm rounded bg-gray-900 border-gray-700 text-white focus:ring-2 focus:ring-blue-400\"\r\n          step=\"0.01\"\r\n          min=\"0\"\r\n        />\r\n        <span className=\"text-sm text-gray-400\">ETH / MATIC / etc</span>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className=\"flex flex-col items-center justify-center py-8\">\r\n          <div className=\"w-8 h-8 border-4 border-blue-400 border-t-transparent rounded-full animate-spin mb-2\"></div>\r\n          <span className=\"text-gray-400\">Loading ETH price‚Ä¶</span>\r\n        </div>\r\n      ) : (\r\n        <table className=\"w-full text-sm border\">\r\n          <thead className=\"bg-gray-900\">\r\n            <tr>\r\n              <th className=\"text-left p-2\">Chain</th>\r\n              <th className=\"text-left p-2\">Base Fee (Gwei)</th>\r\n              <th className=\"text-left p-2\">Priority Fee (Gwei)</th>\r\n              <th className=\"text-left p-2\">Estimated USD Cost</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(chains).map(([chain, data]) => (\r\n              <tr key={chain} className=\"border-t border-gray-700 hover:bg-gray-700/30 transition-colors\">\r\n                <td className=\"capitalize p-2 font-semibold text-blue-200\">{chain}</td>\r\n                <td className=\"p-2\">{data.currentGas.baseFee.toFixed(2)}</td>\r\n                <td className=\"p-2\">{data.currentGas.priorityFee.toFixed(2)}</td>\r\n                <td className=\"p-2 font-medium text-green-400\">\r\n                  ${calculateUsdCost(data.currentGas.baseFee, data.currentGas.priorityFee).toFixed(4)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n      {!isLoading && (\r\n        <div className=\"mt-4 p-3 bg-blue-900/40 rounded-md\">\r\n          <p className=\"text-sm text-blue-200\">\r\n            üí° ETH Price: ${ethUsdPrice.toFixed(2)} | Transaction Value: {(amount * ethUsdPrice).toFixed(2)} USD\r\n          </p>\r\n        </div>\r\n      )}\r\n      <style jsx global>{`\r\n        .fade-in { animation: fadeIn 0.7s cubic-bezier(.4,0,.2,1) both; }\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; transform: translateY(16px); }\r\n          to { opacity: 1; transform: none; }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;;AAKO,MAAM,kBAA4B;;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,MAAM,sCAAsC;IACzF,MAAM,cAAc,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;oDAAE,CAAC,QAAU,MAAM,WAAW;oDAAG,gBAAgB;IAC/E,MAAM,SAAS,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;+CAAE,CAAC,QAAU,MAAM,MAAM;+CAAG,2BAA2B;IAEhF,MAAM,YAAY,gBAAgB;IAElC,8CAA8C;IAC9C,MAAM,mBAAmB,CAAC,SAAiB;QACzC,MAAM,WAAW,OAAO,+BAA+B;QACvD,MAAM,iBAAiB,UAAU;QACjC,MAAM,gBAAgB,AAAC,iBAAiB,WAAY,KAAK,2BAA2B;QACpF,OAAO,gBAAgB;IACzB;IAEA,qBACE,6LAAC;kDAAc;;0BACb,6LAAC;0DAAa;;kCACZ,6LAAC;kEAAe;;;;;;oBAAuD;;;;;;;0BAGzE,6LAAC;0DAAc;;kCACb,6LAAC;kEAAgB;kCAAU;;;;;;kCAC3B,6LAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wBAEzD,MAAK;wBACL,KAAI;kEAFM;;;;;;kCAIZ,6LAAC;kEAAe;kCAAwB;;;;;;;;;;;;YAEzC,0BACC,6LAAC;0DAAc;;kCACb,6LAAC;kEAAc;;;;;;kCACf,6LAAC;kEAAe;kCAAgB;;;;;;;;;;;yEAGlC,6LAAC;0DAAgB;;kCACf,6LAAC;kEAAgB;kCACf,cAAA,6LAAC;;;8CACC,6LAAC;8EAAa;8CAAgB;;;;;;8CAC9B,6LAAC;8EAAa;8CAAgB;;;;;;8CAC9B,6LAAC;8EAAa;8CAAgB;;;;;;8CAC9B,6LAAC;8EAAa;8CAAgB;;;;;;;;;;;;;;;;;kCAGlC,6LAAC;;kCACE,OAAO,OAAO,CAAC,QAAQ,GAAG,CAAC;gCAAC,CAAC,OAAO,KAAK;iDACxC,6LAAC;0EAAyB;;kDACxB,6LAAC;kFAAa;kDAA8C;;;;;;kDAC5D,6LAAC;kFAAa;kDAAO,KAAK,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC;;;;;;kDACrD,6LAAC;kFAAa;kDAAO,KAAK,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC;;;;;;kDACzD,6LAAC;kFAAa;;4CAAiC;4CAC3C,iBAAiB,KAAK,UAAU,CAAC,OAAO,EAAE,KAAK,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC;;;;;;;;+BAL5E;;;;;;;;;;;;;;;;;YAYhB,CAAC,2BACA,6LAAC;0DAAc;0BACb,cAAA,6LAAC;8DAAY;;wBAAwB;wBACnB,YAAY,OAAO,CAAC;wBAAG;wBAAuB,CAAC,SAAS,WAAW,EAAE,OAAO,CAAC;wBAAG;;;;;;;;;;;;;;;;;;;;;;AAa5G;GA9Ea;;QAES,sHAAA,CAAA,cAAW;QAChB,sHAAA,CAAA,cAAW;;;KAHf","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/charts/CandlestickChart.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createChart, CrosshairMode, CandlestickSeries } from 'lightweight-charts';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useGasStore } from '../lib/store';\r\nimport type { ChainId, GasPoint } from '../lib/types';\r\n\r\ninterface CandlestickChartProps {\r\n  chain?: ChainId;\r\n  chains?: ChainId[];\r\n  chainColors?: Record<ChainId, string>;\r\n}\r\n\r\n// Convert gas history to OHLC candlestick data\r\nfunction createCandlestickData(gasHistory: GasPoint[]) {\r\n  if (gasHistory.length === 0) return [];\r\n\r\n  // Group data into 15-minute intervals\r\n  const intervals: { [key: string]: GasPoint[] } = {};\r\n  \r\n  gasHistory.forEach(point => {\r\n    const timestamp = new Date(point.timestamp);\r\n    const intervalKey = new Date(\r\n      timestamp.getFullYear(),\r\n      timestamp.getMonth(),\r\n      timestamp.getDate(),\r\n      timestamp.getHours(),\r\n      Math.floor(timestamp.getMinutes() / 15) * 15\r\n    ).getTime();\r\n\r\n    if (!intervals[intervalKey]) {\r\n      intervals[intervalKey] = [];\r\n    }\r\n    intervals[intervalKey].push(point);\r\n  });\r\n\r\n  // Convert intervals to OHLC format\r\n  return Object.entries(intervals).map(([timestamp, points]) => {\r\n    const prices = points.map(p => p.close);\r\n    return {\r\n      time: Math.floor(parseInt(timestamp) / 1000),\r\n      open: points[0].open,\r\n      high: Math.max(...prices),\r\n      low: Math.min(...prices),\r\n      close: points[points.length - 1].close\r\n    };\r\n  }).sort((a, b) => a.time - b.time);\r\n}\r\n\r\nconst DEFAULT_CHAIN_COLORS: Record<ChainId, string> = {\r\n  ethereum: '#627EEA',\r\n  polygon: '#8247E5',\r\n  arbitrum: '#28A0F0',\r\n};\r\n\r\nexport function CandlestickChart({ chain, chains, chainColors }: CandlestickChartProps) {\r\n  const chartContainerRef = useRef<HTMLDivElement>(null);\r\n  const store = useGasStore();\r\n\r\n  // Support both single and multi-chain mode\r\n  const chainList: ChainId[] = chains || (chain ? [chain] : ['ethereum']);\r\n  const colors = chainColors || DEFAULT_CHAIN_COLORS;\r\n\r\n  useEffect(() => {\r\n    if (!chartContainerRef.current) return;\r\n\r\n    const chart = createChart(chartContainerRef.current, {\r\n      layout: {\r\n        background: { color: '#1a1a1a' },\r\n        textColor: '#d1d4dc',\r\n      },\r\n      grid: {\r\n        vertLines: { color: '#2B2B43' },\r\n        horzLines: { color: '#2B2B43' },\r\n      },\r\n      crosshair: {\r\n        mode: CrosshairMode.Normal,\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: '#2B2B43',\r\n      },\r\n      timeScale: {\r\n        borderColor: '#2B2B43',\r\n      },\r\n    });\r\n\r\n    // Add a candlestick series for each chain\r\n    chainList.forEach((c) => {\r\n      const color = colors[c] || '#888';\r\n      const s = chart.addSeries(CandlestickSeries, {\r\n        upColor: color,\r\n        downColor: '#ef5350',\r\n        borderVisible: false,\r\n        wickUpColor: color,\r\n        wickDownColor: '#ef5350',\r\n      });\r\n      const chainState = store.chains[c];\r\n      const candlestickData = createCandlestickData(chainState?.history || []);\r\n      if (candlestickData.length > 0) {\r\n        s.setData(candlestickData);\r\n      }\r\n    });\r\n\r\n    chart.timeScale().fitContent();\r\n\r\n    return () => {\r\n      chart.remove();\r\n    };\r\n  }, [chainList, colors, store.chains]);\r\n\r\n  // Show a legend and loading state\r\n  const hasAnyData = chainList.some((c) => store.chains[c]?.history?.length > 0);\r\n\r\n  if (!hasAnyData) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-72\">\r\n        <div className=\"w-8 h-8 border-4 border-blue-400 border-t-transparent rounded-full animate-spin mb-2\"></div>\r\n        <span className=\"text-gray-400\">No data for selected chain(s). Check your RPC endpoints and try again.</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full h-[300px]\">\r\n      <div ref={chartContainerRef} style={{ width: '100%', height: 300 }} />\r\n      <div className=\"absolute top-2 left-2 flex gap-4 bg-gray-900/80 rounded px-3 py-1 text-xs font-semibold shadow\">\r\n        {chainList.map((c) => (\r\n          <span key={c} className=\"flex items-center gap-1\" style={{ color: colors[c] }}>\r\n            <span className=\"inline-block w-2 h-2 rounded-full mr-1\" style={{ background: colors[c] }}></span>\r\n            {c}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport { WebSocketProvider } from '@ethersproject/providers'\r\nimport { useGasStore } from '../lib/store'\r\nimport { ChainId, GasPrice } from '../lib/types'\r\n\r\n// RPC URLs - use environment variables for Infura endpoints\r\nconst RPC_URLS = {\r\n  ethereum: process.env.NEXT_PUBLIC_INFURA_WSS || 'wss://mainnet.infura.io/ws/v3/YOUR_INFURA_KEY',\r\n  polygon: process.env.NEXT_PUBLIC_POLYGON_RPC || 'wss://polygon-mainnet.infura.io/ws/v3/YOUR_INFURA_KEY',\r\n  arbitrum: process.env.NEXT_PUBLIC_ARBITRUM_RPC || 'wss://arbitrum-mainnet.infura.io/ws/v3/YOUR_INFURA_KEY',\r\n}\r\n\r\nexport function useWebSocketProvider() {\r\n  const providers = useRef<Partial<Record<ChainId, WebSocketProvider>>>({});\r\n  const updateGasPrice = useGasStore(state => state.updateGasPrice);\r\n  const updateEthPrice = useGasStore(state => state.updateEthPrice);\r\n  const mode = useGasStore(state => state.mode);\r\n\r\n  useEffect(() => {\r\n    if (mode !== 'live') return;\r\n\r\n    const setupProvider = async (chainId: ChainId, url: string) => {\r\n      try {\r\n        const provider = new WebSocketProvider(url);\r\n        providers.current[chainId] = provider;\r\n\r\n        // Handle new blocks\r\n        provider.on('block', async (blockNumber) => {\r\n          try {\r\n            const [block, feeData] = await Promise.all([\r\n              provider.getBlock(blockNumber),\r\n              provider.send('eth_maxPriorityFeePerGas', [])\r\n            ]);\r\n\r\n            const gasPrice: GasPrice = {\r\n              baseFee: block.baseFeePerGas?.toNumber() ?? 0,\r\n              priorityFee: Number(feeData) / 1e9, // Convert wei to gwei\r\n              timestamp: block.timestamp * 1000\r\n            };\r\n\r\n            updateGasPrice(chainId, gasPrice);\r\n          } catch (error) {\r\n            console.error(`Error fetching data for ${chainId}:`, error);\r\n          }\r\n        });\r\n\r\n        // Handle WebSocket errors and reconnect\r\n        provider.on('error', (error: Error) => {\r\n          console.error(`WebSocket error for ${chainId}:`, error);\r\n          setTimeout(() => setupProvider(chainId, url), 5000);\r\n        });\r\n\r\n        // Initial data fetch\r\n        try {\r\n          const [block, feeData] = await Promise.all([\r\n            provider.getBlock('latest'),\r\n            provider.send('eth_maxPriorityFeePerGas', [])\r\n          ]);\r\n\r\n          const gasPrice: GasPrice = {\r\n            baseFee: block.baseFeePerGas?.toNumber() ?? 0,\r\n            priorityFee: Number(feeData) / 1e9, // Convert wei to gwei\r\n            timestamp: block.timestamp * 1000\r\n          };\r\n\r\n          updateGasPrice(chainId, gasPrice);\r\n        } catch (error) {\r\n          console.error(`Error fetching initial data for ${chainId}:`, error);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(`Failed to setup provider for ${chainId}:`, error);\r\n        // Retry after 5 seconds\r\n        setTimeout(() => setupProvider(chainId, url), 5000);\r\n      }\r\n    };\r\n\r\n    // Initialize providers for all chains\r\n    Object.entries(RPC_URLS).forEach(([chainId, url]) => {\r\n      setupProvider(chainId as ChainId, url as string);\r\n    });\r\n\r\n    return () => {\r\n      // Cleanup providers\r\n      Object.values(providers.current).forEach(provider => {\r\n        try {\r\n          provider?.removeAllListeners();\r\n          provider?.destroy?.();\r\n        } catch (error) {\r\n          console.error('Error during provider cleanup:', error);\r\n        }\r\n      });\r\n      providers.current = {};\r\n    };\r\n  }, [mode, updateGasPrice, updateEthPrice]);\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/lib/getUsdPrice.ts"],"sourcesContent":["import { ethers } from 'ethers'\r\n\r\nconst UNISWAP_V3_POOL = '0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640' // ETH/USDC pool\r\nconst UNISWAP_V3_POOL_ABI = [\r\n  'function slot0() external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)'\r\n]\r\n\r\nlet cachedPrice = 0\r\nlet lastFetchTime = 0\r\nconst CACHE_DURATION = 10000 // 10 seconds\r\n\r\nexport async function getEthUsdPrice(provider: ethers.providers.Provider): Promise<number> {\r\n  const now = Date.now()\r\n  \r\n  // Return cached price if it's still valid\r\n  if (cachedPrice > 0 && now - lastFetchTime < CACHE_DURATION) {\r\n    return cachedPrice\r\n  }\r\n\r\n  try {\r\n    const poolContract = new ethers.Contract(\r\n      UNISWAP_V3_POOL,\r\n      UNISWAP_V3_POOL_ABI,\r\n      provider\r\n    )\r\n\r\n    const { sqrtPriceX96 } = await poolContract.slot0()\r\n    \r\n    // Convert sqrtPriceX96 to price\r\n    // Formula: price = (sqrtPriceX96 / 2^96)^2 * 10^12\r\n    const price = (Number(sqrtPriceX96) ** 2 * (10 ** 12)) / (2 ** 192)\r\n    \r\n    cachedPrice = price\r\n    lastFetchTime = now\r\n    \r\n    return price\r\n  } catch (error) {\r\n    console.error('Error fetching ETH/USD price:', error)\r\n    // Return cached price if available, otherwise return 0\r\n    return cachedPrice || 0\r\n  }\r\n}\r\n\r\n// Alternative method using public RPC for fallback\r\nexport async function getEthUsdPriceFallback(): Promise<number> {\r\n  try {\r\n    const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd')\r\n    const data = await response.json()\r\n    return data.ethereum?.usd || 0\r\n  } catch (error) {\r\n    console.error('Error fetching ETH price from CoinGecko:', error)\r\n    return 0\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB,6CAA6C,gBAAgB;;AACrF,MAAM,sBAAsB;IAC1B;CACD;AAED,IAAI,cAAc;AAClB,IAAI,gBAAgB;AACpB,MAAM,iBAAiB,MAAM,aAAa;;AAEnC,eAAe,eAAe,QAAmC;IACtE,MAAM,MAAM,KAAK,GAAG;IAEpB,0CAA0C;IAC1C,IAAI,cAAc,KAAK,MAAM,gBAAgB,gBAAgB;QAC3D,OAAO;IACT;IAEA,IAAI;QACF,MAAM,eAAe,IAAI,mLAAA,CAAA,SAAM,CAAC,QAAQ,CACtC,iBACA,qBACA;QAGF,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,aAAa,KAAK;QAEjD,gCAAgC;QAChC,mDAAmD;QACnD,MAAM,QAAQ,AAAC,OAAO,iBAAiB,IAAK,MAAM,KAAQ,KAAK;QAE/D,cAAc;QACd,gBAAgB;QAEhB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,uDAAuD;QACvD,OAAO,eAAe;IACxB;AACF;AAGO,eAAe;IACpB,IAAI;YAGK;QAFP,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,EAAA,iBAAA,KAAK,QAAQ,cAAb,qCAAA,eAAe,GAAG,KAAI;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4CAA4C;QAC1D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/hooks/useEthPrice.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { useGasStore } from '../lib/store'\r\nimport { getEthUsdPrice, getEthUsdPriceFallback } from '../lib/getUsdPrice'\r\n\r\nexport function useEthPrice() {\r\n  const updateEthPrice = useGasStore(state => state.updateEthPrice)\r\n  const mode = useGasStore(state => state.mode)\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (mode !== 'live') return\r\n\r\n    const fetchEthPrice = async () => {\r\n      try {\r\n        // Try Uniswap V3 first\r\n        const provider = new ethers.providers.JsonRpcProvider(\r\n          process.env.NEXT_PUBLIC_ETH_RPC || 'https://mainnet.infura.io/v3/abcdef1234567890abcdef1234567890'\r\n        )\r\n        \r\n        const price = await getEthUsdPrice(provider)\r\n        \r\n        if (price > 0) {\r\n          updateEthPrice(price)\r\n        } else {\r\n          // Fallback to CoinGecko\r\n          const fallbackPrice = await getEthUsdPriceFallback()\r\n          if (fallbackPrice > 0) {\r\n            updateEthPrice(fallbackPrice)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching ETH price:', error)\r\n        // Try fallback\r\n        try {\r\n          const fallbackPrice = await getEthUsdPriceFallback()\r\n          if (fallbackPrice > 0) {\r\n            updateEthPrice(fallbackPrice)\r\n          }\r\n        } catch (fallbackError) {\r\n          console.error('Error fetching ETH price from fallback:', fallbackError)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Initial fetch\r\n    fetchEthPrice()\r\n\r\n    // Set up periodic updates (every 30 seconds)\r\n    intervalRef.current = setInterval(fetchEthPrice, 30000)\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current)\r\n        intervalRef.current = null\r\n      }\r\n    }\r\n  }, [mode, updateEthPrice])\r\n} "],"names":[],"mappings":";;;AAiBU;AAjBV;AACA;AACA;AACA;;;;;;AAEO,SAAS;;IACd,MAAM,iBAAiB,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;mDAAE,CAAA,QAAS,MAAM,cAAc;;IAChE,MAAM,OAAO,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;yCAAE,CAAA,QAAS,MAAM,IAAI;;IAC5C,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,SAAS,QAAQ;YAErB,MAAM;uDAAgB;oBACpB,IAAI;wBACF,uBAAuB;wBACvB,MAAM,WAAW,IAAI,mLAAA,CAAA,SAAM,CAAC,SAAS,CAAC,eAAe,CACnD,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI;wBAGrC,MAAM,QAAQ,MAAM,CAAA,GAAA,4HAAA,CAAA,iBAAc,AAAD,EAAE;wBAEnC,IAAI,QAAQ,GAAG;4BACb,eAAe;wBACjB,OAAO;4BACL,wBAAwB;4BACxB,MAAM,gBAAgB,MAAM,CAAA,GAAA,4HAAA,CAAA,yBAAsB,AAAD;4BACjD,IAAI,gBAAgB,GAAG;gCACrB,eAAe;4BACjB;wBACF;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,6BAA6B;wBAC3C,eAAe;wBACf,IAAI;4BACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,4HAAA,CAAA,yBAAsB,AAAD;4BACjD,IAAI,gBAAgB,GAAG;gCACrB,eAAe;4BACjB;wBACF,EAAE,OAAO,eAAe;4BACtB,QAAQ,KAAK,CAAC,2CAA2C;wBAC3D;oBACF;gBACF;;YAEA,gBAAgB;YAChB;YAEA,6CAA6C;YAC7C,YAAY,OAAO,GAAG,YAAY,eAAe;YAEjD;yCAAO;oBACL,IAAI,YAAY,OAAO,EAAE;wBACvB,cAAc,YAAY,OAAO;wBACjC,YAAY,OAAO,GAAG;oBACxB;gBACF;;QACF;gCAAG;QAAC;QAAM;KAAe;AAC3B;GArDgB;;QACS,sHAAA,CAAA,cAAW;QACrB,sHAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nithi/blah%20blac/Cross_Chain_Gas_Tracker/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { GasWidget } from '../components/GasWidget'\r\nimport { WalletSimulator } from '../components/WalletSimulator'\r\nimport { CandlestickChart } from '../charts/CandlestickChart'\r\nimport { useWebSocketProvider } from '../hooks/useWebSocket'\r\nimport { useEthPrice } from '../hooks/useEthPrice'\r\n\r\nconst CHAIN_COLORS = {\r\n  ethereum: '#627EEA',\r\n  polygon: '#8247E5',\r\n  arbitrum: '#28A0F0'\r\n} as const;\r\n\r\nconst CHAIN_LABELS = {\r\n  ethereum: 'Ethereum',\r\n  polygon: 'Polygon',\r\n  arbitrum: 'Arbitrum'\r\n} as const;\r\n\r\nexport default function Home() {\r\n  useWebSocketProvider();\r\n  useEthPrice();\r\n  const [selectedChain, setSelectedChain] = useState<'ethereum' | 'polygon' | 'arbitrum'>('ethereum');\r\n\r\n  return (\r\n    <main className=\"min-h-screen p-0 bg-gray-950 text-white\">\r\n      <header className=\"w-full px-8 py-6 bg-gray-900 border-b border-gray-800 shadow\">\r\n        <h1 className=\"text-4xl font-bold tracking-tight mb-1\">‚õΩ Cross-Chain Gas Tracker</h1>\r\n        <p className=\"text-gray-400 text-lg\">Real-time gas prices, cost simulation, and live charts for Ethereum, Polygon, and Arbitrum</p>\r\n      </header>\r\n      <div className=\"flex flex-col md:flex-row gap-8 px-8 py-8\">\r\n        {/* Main Chart Section */}\r\n        <section className=\"flex-1 min-w-0\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <h2 className=\"text-2xl font-semibold\">Gas Price Chart</h2>\r\n            <div className=\"flex gap-2 ml-auto\">\r\n              {Object.keys(CHAIN_LABELS).map((chain) => (\r\n                <button\r\n                  key={chain}\r\n                  className={`px-4 py-1 rounded-full border transition-colors text-sm font-medium ${selectedChain === chain ? 'bg-blue-600 border-blue-400 text-white' : 'bg-gray-800 border-gray-700 text-gray-300 hover:bg-gray-700'}`}\r\n                  onClick={() => setSelectedChain(chain as 'ethereum' | 'polygon' | 'arbitrum')}\r\n                >\r\n                  {CHAIN_LABELS[chain as keyof typeof CHAIN_LABELS]}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gray-900 rounded-xl shadow-lg border border-gray-800 p-4 min-h-[340px] flex items-center justify-center\">\r\n            <CandlestickChart chain={selectedChain} chainColor={CHAIN_COLORS[selectedChain]} />\r\n          </div>\r\n          {/* Multi-chain comparison chart */}\r\n          <div className=\"mt-10\">\r\n            <h3 className=\"text-lg font-semibold mb-2 text-gray-200\">Multi-Chain Gas Comparison</h3>\r\n            <div className=\"bg-gray-900 rounded-xl shadow-lg border border-gray-800 p-4 min-h-[340px] flex items-center justify-center\">\r\n              <CandlestickChart chains={['ethereum', 'polygon', 'arbitrum']} chainColors={CHAIN_COLORS} />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Sidebar with divider and background */}\r\n        <aside className=\"w-full md:w-[370px] flex flex-col gap-6 relative\">\r\n          <div className=\"hidden md:block absolute -left-6 top-0 h-full w-1 bg-gradient-to-b from-blue-900/40 to-transparent rounded-full\" />\r\n          <div className=\"bg-gray-900/80 rounded-2xl shadow-xl border border-gray-800 p-6 fade-in\">\r\n            <h2 className=\"text-xl font-semibold mb-2 text-gray-200\">Live Gas Info</h2>\r\n            <div className=\"flex flex-col gap-4\">\r\n              <GasWidget chain=\"ethereum\" />\r\n              <GasWidget chain=\"polygon\" />\r\n              <GasWidget chain=\"arbitrum\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold mt-8 mb-2 text-gray-200\">Transaction Simulator</h2>\r\n            <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow p-4 mt-2\">\r\n              <WalletSimulator />\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n      <style jsx global>{`\r\n        .fade-in { animation: fadeIn 0.7s cubic-bezier(.4,0,.2,1) both; }\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; transform: translateY(16px); }\r\n          to { opacity: 1; transform: none; }\r\n        }\r\n      `}</style>\r\n    </main>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;;AASA,MAAM,eAAe;IACnB,UAAU;IACV,SAAS;IACT,UAAU;AACZ;AAEA,MAAM,eAAe;IACnB,UAAU;IACV,SAAS;IACT,UAAU;AACZ;AAEe,SAAS;;IACtB,CAAA,GAAA,+HAAA,CAAA,uBAAoB,AAAD;IACnB,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;IACV,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuC;IAExF,qBACE,6LAAC;kDAAe;;0BACd,6LAAC;0DAAiB;;kCAChB,6LAAC;kEAAa;kCAAyC;;;;;;kCACvD,6LAAC;kEAAY;kCAAwB;;;;;;;;;;;;0BAEvC,6LAAC;0DAAc;;kCAEb,6LAAC;kEAAkB;;0CACjB,6LAAC;0EAAc;;kDACb,6LAAC;kFAAa;kDAAyB;;;;;;kDACvC,6LAAC;kFAAc;kDACZ,OAAO,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,sBAC9B,6LAAC;gDAGC,SAAS,IAAM,iBAAiB;0FADrB,AAAC,uEAAyM,OAAnI,kBAAkB,QAAQ,2CAA2C;0DAGtJ,YAAY,CAAC,MAAmC;+CAJ5C;;;;;;;;;;;;;;;;0CASb,6LAAC;0EAAc;0CACb,cAAA,6LAAC,qIAAA,CAAA,mBAAgB;oCAAC,OAAO;oCAAe,YAAY,YAAY,CAAC,cAAc;;;;;;;;;;;0CAGjF,6LAAC;0EAAc;;kDACb,6LAAC;kFAAa;kDAA2C;;;;;;kDACzD,6LAAC;kFAAc;kDACb,cAAA,6LAAC,qIAAA,CAAA,mBAAgB;4CAAC,QAAQ;gDAAC;gDAAY;gDAAW;6CAAW;4CAAE,aAAa;;;;;;;;;;;;;;;;;;;;;;;kCAKlF,6LAAC;kEAAgB;;0CACf,6LAAC;0EAAc;;;;;;0CACf,6LAAC;0EAAc;;kDACb,6LAAC;kFAAa;kDAA2C;;;;;;kDACzD,6LAAC;kFAAc;;0DACb,6LAAC,kIAAA,CAAA,YAAS;gDAAC,OAAM;;;;;;0DACjB,6LAAC,kIAAA,CAAA,YAAS;gDAAC,OAAM;;;;;;0DACjB,6LAAC,kIAAA,CAAA,YAAS;gDAAC,OAAM;;;;;;;;;;;;kDAEnB,6LAAC;kFAAa;kDAAgD;;;;;;kDAC9D,6LAAC;kFAAc;kDACb,cAAA,6LAAC,wIAAA,CAAA,kBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc9B;GAjEwB;;QACtB,+HAAA,CAAA,uBAAoB;QACpB,8HAAA,CAAA,cAAW;;;KAFW","debugId":null}}]
}